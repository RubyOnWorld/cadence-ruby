#
# Autogenerated by Thrift Compiler (0.12.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module CadenceThrift
  module WorkflowIdReusePolicy
    AllowDuplicateFailedOnly = 0
    AllowDuplicate = 1
    RejectDuplicate = 2
    VALUE_MAP = {0 => "AllowDuplicateFailedOnly", 1 => "AllowDuplicate", 2 => "RejectDuplicate"}
    VALID_VALUES = Set.new([AllowDuplicateFailedOnly, AllowDuplicate, RejectDuplicate]).freeze
  end

  module DomainStatus
    REGISTERED = 0
    DEPRECATED = 1
    DELETED = 2
    VALUE_MAP = {0 => "REGISTERED", 1 => "DEPRECATED", 2 => "DELETED"}
    VALID_VALUES = Set.new([REGISTERED, DEPRECATED, DELETED]).freeze
  end

  module TimeoutType
    START_TO_CLOSE = 0
    SCHEDULE_TO_START = 1
    SCHEDULE_TO_CLOSE = 2
    HEARTBEAT = 3
    VALUE_MAP = {0 => "START_TO_CLOSE", 1 => "SCHEDULE_TO_START", 2 => "SCHEDULE_TO_CLOSE", 3 => "HEARTBEAT"}
    VALID_VALUES = Set.new([START_TO_CLOSE, SCHEDULE_TO_START, SCHEDULE_TO_CLOSE, HEARTBEAT]).freeze
  end

  module ParentClosePolicy
    ABANDON = 0
    REQUEST_CANCEL = 1
    TERMINATE = 2
    VALUE_MAP = {0 => "ABANDON", 1 => "REQUEST_CANCEL", 2 => "TERMINATE"}
    VALID_VALUES = Set.new([ABANDON, REQUEST_CANCEL, TERMINATE]).freeze
  end

  module DecisionType
    ScheduleActivityTask = 0
    RequestCancelActivityTask = 1
    StartTimer = 2
    CompleteWorkflowExecution = 3
    FailWorkflowExecution = 4
    CancelTimer = 5
    CancelWorkflowExecution = 6
    RequestCancelExternalWorkflowExecution = 7
    RecordMarker = 8
    ContinueAsNewWorkflowExecution = 9
    StartChildWorkflowExecution = 10
    SignalExternalWorkflowExecution = 11
    UpsertWorkflowSearchAttributes = 12
    VALUE_MAP = {0 => "ScheduleActivityTask", 1 => "RequestCancelActivityTask", 2 => "StartTimer", 3 => "CompleteWorkflowExecution", 4 => "FailWorkflowExecution", 5 => "CancelTimer", 6 => "CancelWorkflowExecution", 7 => "RequestCancelExternalWorkflowExecution", 8 => "RecordMarker", 9 => "ContinueAsNewWorkflowExecution", 10 => "StartChildWorkflowExecution", 11 => "SignalExternalWorkflowExecution", 12 => "UpsertWorkflowSearchAttributes"}
    VALID_VALUES = Set.new([ScheduleActivityTask, RequestCancelActivityTask, StartTimer, CompleteWorkflowExecution, FailWorkflowExecution, CancelTimer, CancelWorkflowExecution, RequestCancelExternalWorkflowExecution, RecordMarker, ContinueAsNewWorkflowExecution, StartChildWorkflowExecution, SignalExternalWorkflowExecution, UpsertWorkflowSearchAttributes]).freeze
  end

  module EventType
    WorkflowExecutionStarted = 0
    WorkflowExecutionCompleted = 1
    WorkflowExecutionFailed = 2
    WorkflowExecutionTimedOut = 3
    DecisionTaskScheduled = 4
    DecisionTaskStarted = 5
    DecisionTaskCompleted = 6
    DecisionTaskTimedOut = 7
    DecisionTaskFailed = 8
    ActivityTaskScheduled = 9
    ActivityTaskStarted = 10
    ActivityTaskCompleted = 11
    ActivityTaskFailed = 12
    ActivityTaskTimedOut = 13
    ActivityTaskCancelRequested = 14
    RequestCancelActivityTaskFailed = 15
    ActivityTaskCanceled = 16
    TimerStarted = 17
    TimerFired = 18
    CancelTimerFailed = 19
    TimerCanceled = 20
    WorkflowExecutionCancelRequested = 21
    WorkflowExecutionCanceled = 22
    RequestCancelExternalWorkflowExecutionInitiated = 23
    RequestCancelExternalWorkflowExecutionFailed = 24
    ExternalWorkflowExecutionCancelRequested = 25
    MarkerRecorded = 26
    WorkflowExecutionSignaled = 27
    WorkflowExecutionTerminated = 28
    WorkflowExecutionContinuedAsNew = 29
    StartChildWorkflowExecutionInitiated = 30
    StartChildWorkflowExecutionFailed = 31
    ChildWorkflowExecutionStarted = 32
    ChildWorkflowExecutionCompleted = 33
    ChildWorkflowExecutionFailed = 34
    ChildWorkflowExecutionCanceled = 35
    ChildWorkflowExecutionTimedOut = 36
    ChildWorkflowExecutionTerminated = 37
    SignalExternalWorkflowExecutionInitiated = 38
    SignalExternalWorkflowExecutionFailed = 39
    ExternalWorkflowExecutionSignaled = 40
    UpsertWorkflowSearchAttributes = 41
    VALUE_MAP = {0 => "WorkflowExecutionStarted", 1 => "WorkflowExecutionCompleted", 2 => "WorkflowExecutionFailed", 3 => "WorkflowExecutionTimedOut", 4 => "DecisionTaskScheduled", 5 => "DecisionTaskStarted", 6 => "DecisionTaskCompleted", 7 => "DecisionTaskTimedOut", 8 => "DecisionTaskFailed", 9 => "ActivityTaskScheduled", 10 => "ActivityTaskStarted", 11 => "ActivityTaskCompleted", 12 => "ActivityTaskFailed", 13 => "ActivityTaskTimedOut", 14 => "ActivityTaskCancelRequested", 15 => "RequestCancelActivityTaskFailed", 16 => "ActivityTaskCanceled", 17 => "TimerStarted", 18 => "TimerFired", 19 => "CancelTimerFailed", 20 => "TimerCanceled", 21 => "WorkflowExecutionCancelRequested", 22 => "WorkflowExecutionCanceled", 23 => "RequestCancelExternalWorkflowExecutionInitiated", 24 => "RequestCancelExternalWorkflowExecutionFailed", 25 => "ExternalWorkflowExecutionCancelRequested", 26 => "MarkerRecorded", 27 => "WorkflowExecutionSignaled", 28 => "WorkflowExecutionTerminated", 29 => "WorkflowExecutionContinuedAsNew", 30 => "StartChildWorkflowExecutionInitiated", 31 => "StartChildWorkflowExecutionFailed", 32 => "ChildWorkflowExecutionStarted", 33 => "ChildWorkflowExecutionCompleted", 34 => "ChildWorkflowExecutionFailed", 35 => "ChildWorkflowExecutionCanceled", 36 => "ChildWorkflowExecutionTimedOut", 37 => "ChildWorkflowExecutionTerminated", 38 => "SignalExternalWorkflowExecutionInitiated", 39 => "SignalExternalWorkflowExecutionFailed", 40 => "ExternalWorkflowExecutionSignaled", 41 => "UpsertWorkflowSearchAttributes"}
    VALID_VALUES = Set.new([WorkflowExecutionStarted, WorkflowExecutionCompleted, WorkflowExecutionFailed, WorkflowExecutionTimedOut, DecisionTaskScheduled, DecisionTaskStarted, DecisionTaskCompleted, DecisionTaskTimedOut, DecisionTaskFailed, ActivityTaskScheduled, ActivityTaskStarted, ActivityTaskCompleted, ActivityTaskFailed, ActivityTaskTimedOut, ActivityTaskCancelRequested, RequestCancelActivityTaskFailed, ActivityTaskCanceled, TimerStarted, TimerFired, CancelTimerFailed, TimerCanceled, WorkflowExecutionCancelRequested, WorkflowExecutionCanceled, RequestCancelExternalWorkflowExecutionInitiated, RequestCancelExternalWorkflowExecutionFailed, ExternalWorkflowExecutionCancelRequested, MarkerRecorded, WorkflowExecutionSignaled, WorkflowExecutionTerminated, WorkflowExecutionContinuedAsNew, StartChildWorkflowExecutionInitiated, StartChildWorkflowExecutionFailed, ChildWorkflowExecutionStarted, ChildWorkflowExecutionCompleted, ChildWorkflowExecutionFailed, ChildWorkflowExecutionCanceled, ChildWorkflowExecutionTimedOut, ChildWorkflowExecutionTerminated, SignalExternalWorkflowExecutionInitiated, SignalExternalWorkflowExecutionFailed, ExternalWorkflowExecutionSignaled, UpsertWorkflowSearchAttributes]).freeze
  end

  module DecisionTaskFailedCause
    UNHANDLED_DECISION = 0
    BAD_SCHEDULE_ACTIVITY_ATTRIBUTES = 1
    BAD_REQUEST_CANCEL_ACTIVITY_ATTRIBUTES = 2
    BAD_START_TIMER_ATTRIBUTES = 3
    BAD_CANCEL_TIMER_ATTRIBUTES = 4
    BAD_RECORD_MARKER_ATTRIBUTES = 5
    BAD_COMPLETE_WORKFLOW_EXECUTION_ATTRIBUTES = 6
    BAD_FAIL_WORKFLOW_EXECUTION_ATTRIBUTES = 7
    BAD_CANCEL_WORKFLOW_EXECUTION_ATTRIBUTES = 8
    BAD_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_ATTRIBUTES = 9
    BAD_CONTINUE_AS_NEW_ATTRIBUTES = 10
    START_TIMER_DUPLICATE_ID = 11
    RESET_STICKY_TASKLIST = 12
    WORKFLOW_WORKER_UNHANDLED_FAILURE = 13
    BAD_SIGNAL_WORKFLOW_EXECUTION_ATTRIBUTES = 14
    BAD_START_CHILD_EXECUTION_ATTRIBUTES = 15
    FORCE_CLOSE_DECISION = 16
    FAILOVER_CLOSE_DECISION = 17
    BAD_SIGNAL_INPUT_SIZE = 18
    RESET_WORKFLOW = 19
    BAD_BINARY = 20
    SCHEDULE_ACTIVITY_DUPLICATE_ID = 21
    BAD_SEARCH_ATTRIBUTES = 22
    VALUE_MAP = {0 => "UNHANDLED_DECISION", 1 => "BAD_SCHEDULE_ACTIVITY_ATTRIBUTES", 2 => "BAD_REQUEST_CANCEL_ACTIVITY_ATTRIBUTES", 3 => "BAD_START_TIMER_ATTRIBUTES", 4 => "BAD_CANCEL_TIMER_ATTRIBUTES", 5 => "BAD_RECORD_MARKER_ATTRIBUTES", 6 => "BAD_COMPLETE_WORKFLOW_EXECUTION_ATTRIBUTES", 7 => "BAD_FAIL_WORKFLOW_EXECUTION_ATTRIBUTES", 8 => "BAD_CANCEL_WORKFLOW_EXECUTION_ATTRIBUTES", 9 => "BAD_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_ATTRIBUTES", 10 => "BAD_CONTINUE_AS_NEW_ATTRIBUTES", 11 => "START_TIMER_DUPLICATE_ID", 12 => "RESET_STICKY_TASKLIST", 13 => "WORKFLOW_WORKER_UNHANDLED_FAILURE", 14 => "BAD_SIGNAL_WORKFLOW_EXECUTION_ATTRIBUTES", 15 => "BAD_START_CHILD_EXECUTION_ATTRIBUTES", 16 => "FORCE_CLOSE_DECISION", 17 => "FAILOVER_CLOSE_DECISION", 18 => "BAD_SIGNAL_INPUT_SIZE", 19 => "RESET_WORKFLOW", 20 => "BAD_BINARY", 21 => "SCHEDULE_ACTIVITY_DUPLICATE_ID", 22 => "BAD_SEARCH_ATTRIBUTES"}
    VALID_VALUES = Set.new([UNHANDLED_DECISION, BAD_SCHEDULE_ACTIVITY_ATTRIBUTES, BAD_REQUEST_CANCEL_ACTIVITY_ATTRIBUTES, BAD_START_TIMER_ATTRIBUTES, BAD_CANCEL_TIMER_ATTRIBUTES, BAD_RECORD_MARKER_ATTRIBUTES, BAD_COMPLETE_WORKFLOW_EXECUTION_ATTRIBUTES, BAD_FAIL_WORKFLOW_EXECUTION_ATTRIBUTES, BAD_CANCEL_WORKFLOW_EXECUTION_ATTRIBUTES, BAD_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_ATTRIBUTES, BAD_CONTINUE_AS_NEW_ATTRIBUTES, START_TIMER_DUPLICATE_ID, RESET_STICKY_TASKLIST, WORKFLOW_WORKER_UNHANDLED_FAILURE, BAD_SIGNAL_WORKFLOW_EXECUTION_ATTRIBUTES, BAD_START_CHILD_EXECUTION_ATTRIBUTES, FORCE_CLOSE_DECISION, FAILOVER_CLOSE_DECISION, BAD_SIGNAL_INPUT_SIZE, RESET_WORKFLOW, BAD_BINARY, SCHEDULE_ACTIVITY_DUPLICATE_ID, BAD_SEARCH_ATTRIBUTES]).freeze
  end

  module CancelExternalWorkflowExecutionFailedCause
    UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION = 0
    VALUE_MAP = {0 => "UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION"}
    VALID_VALUES = Set.new([UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION]).freeze
  end

  module SignalExternalWorkflowExecutionFailedCause
    UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION = 0
    VALUE_MAP = {0 => "UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION"}
    VALID_VALUES = Set.new([UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION]).freeze
  end

  module ChildWorkflowExecutionFailedCause
    WORKFLOW_ALREADY_RUNNING = 0
    VALUE_MAP = {0 => "WORKFLOW_ALREADY_RUNNING"}
    VALID_VALUES = Set.new([WORKFLOW_ALREADY_RUNNING]).freeze
  end

  module WorkflowExecutionCloseStatus
    COMPLETED = 0
    FAILED = 1
    CANCELED = 2
    TERMINATED = 3
    CONTINUED_AS_NEW = 4
    TIMED_OUT = 5
    VALUE_MAP = {0 => "COMPLETED", 1 => "FAILED", 2 => "CANCELED", 3 => "TERMINATED", 4 => "CONTINUED_AS_NEW", 5 => "TIMED_OUT"}
    VALID_VALUES = Set.new([COMPLETED, FAILED, CANCELED, TERMINATED, CONTINUED_AS_NEW, TIMED_OUT]).freeze
  end

  module QueryTaskCompletedType
    COMPLETED = 0
    FAILED = 1
    VALUE_MAP = {0 => "COMPLETED", 1 => "FAILED"}
    VALID_VALUES = Set.new([COMPLETED, FAILED]).freeze
  end

  module QueryResultType
    ANSWERED = 0
    FAILED = 1
    VALUE_MAP = {0 => "ANSWERED", 1 => "FAILED"}
    VALID_VALUES = Set.new([ANSWERED, FAILED]).freeze
  end

  module PendingActivityState
    SCHEDULED = 0
    STARTED = 1
    CANCEL_REQUESTED = 2
    VALUE_MAP = {0 => "SCHEDULED", 1 => "STARTED", 2 => "CANCEL_REQUESTED"}
    VALID_VALUES = Set.new([SCHEDULED, STARTED, CANCEL_REQUESTED]).freeze
  end

  module HistoryEventFilterType
    ALL_EVENT = 0
    CLOSE_EVENT = 1
    VALUE_MAP = {0 => "ALL_EVENT", 1 => "CLOSE_EVENT"}
    VALID_VALUES = Set.new([ALL_EVENT, CLOSE_EVENT]).freeze
  end

  module TaskListKind
    NORMAL = 0
    STICKY = 1
    VALUE_MAP = {0 => "NORMAL", 1 => "STICKY"}
    VALID_VALUES = Set.new([NORMAL, STICKY]).freeze
  end

  module ArchivalStatus
    DISABLED = 0
    ENABLED = 1
    VALUE_MAP = {0 => "DISABLED", 1 => "ENABLED"}
    VALID_VALUES = Set.new([DISABLED, ENABLED]).freeze
  end

  module IndexedValueType
    STRING = 0
    KEYWORD = 1
    INT = 2
    DOUBLE = 3
    BOOL = 4
    DATETIME = 5
    VALUE_MAP = {0 => "STRING", 1 => "KEYWORD", 2 => "INT", 3 => "DOUBLE", 4 => "BOOL", 5 => "DATETIME"}
    VALID_VALUES = Set.new([STRING, KEYWORD, INT, DOUBLE, BOOL, DATETIME]).freeze
  end

  module EncodingType
    ThriftRW = 0
    VALUE_MAP = {0 => "ThriftRW"}
    VALID_VALUES = Set.new([ThriftRW]).freeze
  end

  module QueryRejectCondition
    NOT_OPEN = 0
    NOT_COMPLETED_CLEANLY = 1
    VALUE_MAP = {0 => "NOT_OPEN", 1 => "NOT_COMPLETED_CLEANLY"}
    VALID_VALUES = Set.new([NOT_OPEN, NOT_COMPLETED_CLEANLY]).freeze
  end

  module ContinueAsNewInitiator
    Decider = 0
    RetryPolicy = 1
    CronSchedule = 2
    VALUE_MAP = {0 => "Decider", 1 => "RetryPolicy", 2 => "CronSchedule"}
    VALID_VALUES = Set.new([Decider, RetryPolicy, CronSchedule]).freeze
  end

  module TaskListType
    Decision = 0
    Activity = 1
    VALUE_MAP = {0 => "Decision", 1 => "Activity"}
    VALID_VALUES = Set.new([Decision, Activity]).freeze
  end

  class BadRequestError < ::Thrift::Exception; end

  class InternalServiceError < ::Thrift::Exception; end

  class DomainAlreadyExistsError < ::Thrift::Exception; end

  class WorkflowExecutionAlreadyStartedError < ::Thrift::Exception; end

  class EntityNotExistsError < ::Thrift::Exception; end

  class ServiceBusyError < ::Thrift::Exception; end

  class CancellationAlreadyRequestedError < ::Thrift::Exception; end

  class QueryFailedError < ::Thrift::Exception; end

  class DomainNotActiveError < ::Thrift::Exception; end

  class LimitExceededError < ::Thrift::Exception; end

  class AccessDeniedError < ::Thrift::Exception; end

  class RetryTaskError < ::Thrift::Exception; end

  class ClientVersionNotSupportedError < ::Thrift::Exception; end

  class Header; end

  class WorkflowType; end

  class ActivityType; end

  class TaskList; end

  class DataBlob; end

  class ReplicationInfo; end

  class TaskListMetadata; end

  class WorkflowExecution; end

  class Memo; end

  class SearchAttributes; end

  class WorkflowExecutionInfo; end

  class WorkflowExecutionConfiguration; end

  class TransientDecisionInfo; end

  class ScheduleActivityTaskDecisionAttributes; end

  class RequestCancelActivityTaskDecisionAttributes; end

  class StartTimerDecisionAttributes; end

  class CompleteWorkflowExecutionDecisionAttributes; end

  class FailWorkflowExecutionDecisionAttributes; end

  class CancelTimerDecisionAttributes; end

  class CancelWorkflowExecutionDecisionAttributes; end

  class RequestCancelExternalWorkflowExecutionDecisionAttributes; end

  class SignalExternalWorkflowExecutionDecisionAttributes; end

  class UpsertWorkflowSearchAttributesDecisionAttributes; end

  class RecordMarkerDecisionAttributes; end

  class ContinueAsNewWorkflowExecutionDecisionAttributes; end

  class StartChildWorkflowExecutionDecisionAttributes; end

  class Decision; end

  class WorkflowExecutionStartedEventAttributes; end

  class ResetPoints; end

  class ResetPointInfo; end

  class WorkflowExecutionCompletedEventAttributes; end

  class WorkflowExecutionFailedEventAttributes; end

  class WorkflowExecutionTimedOutEventAttributes; end

  class WorkflowExecutionContinuedAsNewEventAttributes; end

  class DecisionTaskScheduledEventAttributes; end

  class DecisionTaskStartedEventAttributes; end

  class DecisionTaskCompletedEventAttributes; end

  class DecisionTaskTimedOutEventAttributes; end

  class DecisionTaskFailedEventAttributes; end

  class ActivityTaskScheduledEventAttributes; end

  class ActivityTaskStartedEventAttributes; end

  class ActivityTaskCompletedEventAttributes; end

  class ActivityTaskFailedEventAttributes; end

  class ActivityTaskTimedOutEventAttributes; end

  class ActivityTaskCancelRequestedEventAttributes; end

  class RequestCancelActivityTaskFailedEventAttributes; end

  class ActivityTaskCanceledEventAttributes; end

  class TimerStartedEventAttributes; end

  class TimerFiredEventAttributes; end

  class TimerCanceledEventAttributes; end

  class CancelTimerFailedEventAttributes; end

  class WorkflowExecutionCancelRequestedEventAttributes; end

  class WorkflowExecutionCanceledEventAttributes; end

  class MarkerRecordedEventAttributes; end

  class WorkflowExecutionSignaledEventAttributes; end

  class WorkflowExecutionTerminatedEventAttributes; end

  class RequestCancelExternalWorkflowExecutionInitiatedEventAttributes; end

  class RequestCancelExternalWorkflowExecutionFailedEventAttributes; end

  class ExternalWorkflowExecutionCancelRequestedEventAttributes; end

  class SignalExternalWorkflowExecutionInitiatedEventAttributes; end

  class SignalExternalWorkflowExecutionFailedEventAttributes; end

  class ExternalWorkflowExecutionSignaledEventAttributes; end

  class UpsertWorkflowSearchAttributesEventAttributes; end

  class StartChildWorkflowExecutionInitiatedEventAttributes; end

  class StartChildWorkflowExecutionFailedEventAttributes; end

  class ChildWorkflowExecutionStartedEventAttributes; end

  class ChildWorkflowExecutionCompletedEventAttributes; end

  class ChildWorkflowExecutionFailedEventAttributes; end

  class ChildWorkflowExecutionCanceledEventAttributes; end

  class ChildWorkflowExecutionTimedOutEventAttributes; end

  class ChildWorkflowExecutionTerminatedEventAttributes; end

  class HistoryEvent; end

  class History; end

  class WorkflowExecutionFilter; end

  class WorkflowTypeFilter; end

  class StartTimeFilter; end

  class DomainInfo; end

  class DomainConfiguration; end

  class BadBinaries; end

  class BadBinaryInfo; end

  class UpdateDomainInfo; end

  class ClusterReplicationConfiguration; end

  class DomainReplicationConfiguration; end

  class RegisterDomainRequest; end

  class ListDomainsRequest; end

  class ListDomainsResponse; end

  class DescribeDomainRequest; end

  class DescribeDomainResponse; end

  class UpdateDomainRequest; end

  class UpdateDomainResponse; end

  class DeprecateDomainRequest; end

  class StartWorkflowExecutionRequest; end

  class StartWorkflowExecutionResponse; end

  class PollForDecisionTaskRequest; end

  class PollForDecisionTaskResponse; end

  class StickyExecutionAttributes; end

  class RespondDecisionTaskCompletedRequest; end

  class RespondDecisionTaskCompletedResponse; end

  class RespondDecisionTaskFailedRequest; end

  class PollForActivityTaskRequest; end

  class PollForActivityTaskResponse; end

  class RecordActivityTaskHeartbeatRequest; end

  class RecordActivityTaskHeartbeatByIDRequest; end

  class RecordActivityTaskHeartbeatResponse; end

  class RespondActivityTaskCompletedRequest; end

  class RespondActivityTaskFailedRequest; end

  class RespondActivityTaskCanceledRequest; end

  class RespondActivityTaskCompletedByIDRequest; end

  class RespondActivityTaskFailedByIDRequest; end

  class RespondActivityTaskCanceledByIDRequest; end

  class RequestCancelWorkflowExecutionRequest; end

  class GetWorkflowExecutionHistoryRequest; end

  class GetWorkflowExecutionHistoryResponse; end

  class SignalWorkflowExecutionRequest; end

  class SignalWithStartWorkflowExecutionRequest; end

  class TerminateWorkflowExecutionRequest; end

  class ResetWorkflowExecutionRequest; end

  class ResetWorkflowExecutionResponse; end

  class ListOpenWorkflowExecutionsRequest; end

  class ListOpenWorkflowExecutionsResponse; end

  class ListClosedWorkflowExecutionsRequest; end

  class ListClosedWorkflowExecutionsResponse; end

  class ListWorkflowExecutionsRequest; end

  class ListWorkflowExecutionsResponse; end

  class ListArchivedWorkflowExecutionsRequest; end

  class ListArchivedWorkflowExecutionsResponse; end

  class CountWorkflowExecutionsRequest; end

  class CountWorkflowExecutionsResponse; end

  class GetSearchAttributesResponse; end

  class QueryWorkflowRequest; end

  class QueryRejected; end

  class QueryWorkflowResponse; end

  class WorkflowQuery; end

  class ResetStickyTaskListRequest; end

  class ResetStickyTaskListResponse; end

  class RespondQueryTaskCompletedRequest; end

  class WorkflowQueryResult; end

  class DescribeWorkflowExecutionRequest; end

  class PendingActivityInfo; end

  class PendingChildExecutionInfo; end

  class DescribeWorkflowExecutionResponse; end

  class DescribeTaskListRequest; end

  class DescribeTaskListResponse; end

  class TaskListStatus; end

  class TaskIDBlock; end

  class DescribeHistoryHostRequest; end

  class RemoveTaskRequest; end

  class CloseShardRequest; end

  class DescribeHistoryHostResponse; end

  class DomainCacheInfo; end

  class PollerInfo; end

  class RetryPolicy; end

  class HistoryBranchRange; end

  class HistoryBranch; end

  class BadRequestError < ::Thrift::Exception
    include ::Thrift::Struct, ::Thrift::Struct_Union
    def initialize(message=nil)
      super()
      self.message = message
    end

    MESSAGE = 1

    FIELDS = {
      MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
    }

    def struct_fields; FIELDS; end

    def validate
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field message is unset!') unless @message
    end

    ::Thrift::Struct.generate_accessors self
  end

  class InternalServiceError < ::Thrift::Exception
    include ::Thrift::Struct, ::Thrift::Struct_Union
    def initialize(message=nil)
      super()
      self.message = message
    end

    MESSAGE = 1

    FIELDS = {
      MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
    }

    def struct_fields; FIELDS; end

    def validate
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field message is unset!') unless @message
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DomainAlreadyExistsError < ::Thrift::Exception
    include ::Thrift::Struct, ::Thrift::Struct_Union
    def initialize(message=nil)
      super()
      self.message = message
    end

    MESSAGE = 1

    FIELDS = {
      MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
    }

    def struct_fields; FIELDS; end

    def validate
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field message is unset!') unless @message
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowExecutionAlreadyStartedError < ::Thrift::Exception
    include ::Thrift::Struct, ::Thrift::Struct_Union
    MESSAGE = 10
    STARTREQUESTID = 20
    RUNID = 30

    FIELDS = {
      MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message', :optional => true},
      STARTREQUESTID => {:type => ::Thrift::Types::STRING, :name => 'startRequestId', :optional => true},
      RUNID => {:type => ::Thrift::Types::STRING, :name => 'runId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class EntityNotExistsError < ::Thrift::Exception
    include ::Thrift::Struct, ::Thrift::Struct_Union
    def initialize(message=nil)
      super()
      self.message = message
    end

    MESSAGE = 1

    FIELDS = {
      MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
    }

    def struct_fields; FIELDS; end

    def validate
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field message is unset!') unless @message
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ServiceBusyError < ::Thrift::Exception
    include ::Thrift::Struct, ::Thrift::Struct_Union
    def initialize(message=nil)
      super()
      self.message = message
    end

    MESSAGE = 1

    FIELDS = {
      MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
    }

    def struct_fields; FIELDS; end

    def validate
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field message is unset!') unless @message
    end

    ::Thrift::Struct.generate_accessors self
  end

  class CancellationAlreadyRequestedError < ::Thrift::Exception
    include ::Thrift::Struct, ::Thrift::Struct_Union
    def initialize(message=nil)
      super()
      self.message = message
    end

    MESSAGE = 1

    FIELDS = {
      MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
    }

    def struct_fields; FIELDS; end

    def validate
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field message is unset!') unless @message
    end

    ::Thrift::Struct.generate_accessors self
  end

  class QueryFailedError < ::Thrift::Exception
    include ::Thrift::Struct, ::Thrift::Struct_Union
    def initialize(message=nil)
      super()
      self.message = message
    end

    MESSAGE = 1

    FIELDS = {
      MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
    }

    def struct_fields; FIELDS; end

    def validate
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field message is unset!') unless @message
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DomainNotActiveError < ::Thrift::Exception
    include ::Thrift::Struct, ::Thrift::Struct_Union
    MESSAGE = 1
    DOMAINNAME = 2
    CURRENTCLUSTER = 3
    ACTIVECLUSTER = 4

    FIELDS = {
      MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'},
      DOMAINNAME => {:type => ::Thrift::Types::STRING, :name => 'domainName'},
      CURRENTCLUSTER => {:type => ::Thrift::Types::STRING, :name => 'currentCluster'},
      ACTIVECLUSTER => {:type => ::Thrift::Types::STRING, :name => 'activeCluster'}
    }

    def struct_fields; FIELDS; end

    def validate
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field message is unset!') unless @message
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field domainName is unset!') unless @domainName
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field currentCluster is unset!') unless @currentCluster
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field activeCluster is unset!') unless @activeCluster
    end

    ::Thrift::Struct.generate_accessors self
  end

  class LimitExceededError < ::Thrift::Exception
    include ::Thrift::Struct, ::Thrift::Struct_Union
    def initialize(message=nil)
      super()
      self.message = message
    end

    MESSAGE = 1

    FIELDS = {
      MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
    }

    def struct_fields; FIELDS; end

    def validate
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field message is unset!') unless @message
    end

    ::Thrift::Struct.generate_accessors self
  end

  class AccessDeniedError < ::Thrift::Exception
    include ::Thrift::Struct, ::Thrift::Struct_Union
    def initialize(message=nil)
      super()
      self.message = message
    end

    MESSAGE = 1

    FIELDS = {
      MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
    }

    def struct_fields; FIELDS; end

    def validate
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field message is unset!') unless @message
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RetryTaskError < ::Thrift::Exception
    include ::Thrift::Struct, ::Thrift::Struct_Union
    MESSAGE = 1
    DOMAINID = 2
    WORKFLOWID = 3
    RUNID = 4
    NEXTEVENTID = 5

    FIELDS = {
      MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'},
      DOMAINID => {:type => ::Thrift::Types::STRING, :name => 'domainId', :optional => true},
      WORKFLOWID => {:type => ::Thrift::Types::STRING, :name => 'workflowId', :optional => true},
      RUNID => {:type => ::Thrift::Types::STRING, :name => 'runId', :optional => true},
      NEXTEVENTID => {:type => ::Thrift::Types::I64, :name => 'nextEventId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field message is unset!') unless @message
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ClientVersionNotSupportedError < ::Thrift::Exception
    include ::Thrift::Struct, ::Thrift::Struct_Union
    FEATUREVERSION = 1
    CLIENTIMPL = 2
    SUPPORTEDVERSIONS = 3

    FIELDS = {
      FEATUREVERSION => {:type => ::Thrift::Types::STRING, :name => 'featureVersion'},
      CLIENTIMPL => {:type => ::Thrift::Types::STRING, :name => 'clientImpl'},
      SUPPORTEDVERSIONS => {:type => ::Thrift::Types::STRING, :name => 'supportedVersions'}
    }

    def struct_fields; FIELDS; end

    def validate
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field featureVersion is unset!') unless @featureVersion
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field clientImpl is unset!') unless @clientImpl
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field supportedVersions is unset!') unless @supportedVersions
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Header
    include ::Thrift::Struct, ::Thrift::Struct_Union
    FIELDS = 10

    FIELDS = {
      FIELDS => {:type => ::Thrift::Types::MAP, :name => 'fields', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING, :binary => true}, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowType
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NAME = 10

    FIELDS = {
      NAME => {:type => ::Thrift::Types::STRING, :name => 'name', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ActivityType
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NAME = 10

    FIELDS = {
      NAME => {:type => ::Thrift::Types::STRING, :name => 'name', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class TaskList
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NAME = 10
    KIND = 20

    FIELDS = {
      NAME => {:type => ::Thrift::Types::STRING, :name => 'name', :optional => true},
      KIND => {:type => ::Thrift::Types::I32, :name => 'kind', :optional => true, :enum_class => ::CadenceThrift::TaskListKind}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @kind.nil? || ::CadenceThrift::TaskListKind::VALID_VALUES.include?(@kind)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field kind!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DataBlob
    include ::Thrift::Struct, ::Thrift::Struct_Union
    ENCODINGTYPE = 10
    DATA = 20

    FIELDS = {
      ENCODINGTYPE => {:type => ::Thrift::Types::I32, :name => 'EncodingType', :optional => true, :enum_class => ::CadenceThrift::EncodingType},
      DATA => {:type => ::Thrift::Types::STRING, :name => 'Data', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @EncodingType.nil? || ::CadenceThrift::EncodingType::VALID_VALUES.include?(@EncodingType)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field EncodingType!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ReplicationInfo
    include ::Thrift::Struct, ::Thrift::Struct_Union
    VERSION = 10
    LASTEVENTID = 20

    FIELDS = {
      VERSION => {:type => ::Thrift::Types::I64, :name => 'version', :optional => true},
      LASTEVENTID => {:type => ::Thrift::Types::I64, :name => 'lastEventId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class TaskListMetadata
    include ::Thrift::Struct, ::Thrift::Struct_Union
    MAXTASKSPERSECOND = 10

    FIELDS = {
      MAXTASKSPERSECOND => {:type => ::Thrift::Types::DOUBLE, :name => 'maxTasksPerSecond', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowExecution
    include ::Thrift::Struct, ::Thrift::Struct_Union
    WORKFLOWID = 10
    RUNID = 20

    FIELDS = {
      WORKFLOWID => {:type => ::Thrift::Types::STRING, :name => 'workflowId', :optional => true},
      RUNID => {:type => ::Thrift::Types::STRING, :name => 'runId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Memo
    include ::Thrift::Struct, ::Thrift::Struct_Union
    FIELDS = 10

    FIELDS = {
      FIELDS => {:type => ::Thrift::Types::MAP, :name => 'fields', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING, :binary => true}, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class SearchAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    INDEXEDFIELDS = 10

    FIELDS = {
      INDEXEDFIELDS => {:type => ::Thrift::Types::MAP, :name => 'indexedFields', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING, :binary => true}, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowExecutionInfo
    include ::Thrift::Struct, ::Thrift::Struct_Union
    EXECUTION = 10
    TYPE = 20
    STARTTIME = 30
    CLOSETIME = 40
    CLOSESTATUS = 50
    HISTORYLENGTH = 60
    PARENTDOMAINID = 70
    PARENTEXECUTION = 80
    EXECUTIONTIME = 90
    MEMO = 100
    SEARCHATTRIBUTES = 101
    AUTORESETPOINTS = 110

    FIELDS = {
      EXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'execution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      TYPE => {:type => ::Thrift::Types::STRUCT, :name => 'type', :class => ::CadenceThrift::WorkflowType, :optional => true},
      STARTTIME => {:type => ::Thrift::Types::I64, :name => 'startTime', :optional => true},
      CLOSETIME => {:type => ::Thrift::Types::I64, :name => 'closeTime', :optional => true},
      CLOSESTATUS => {:type => ::Thrift::Types::I32, :name => 'closeStatus', :optional => true, :enum_class => ::CadenceThrift::WorkflowExecutionCloseStatus},
      HISTORYLENGTH => {:type => ::Thrift::Types::I64, :name => 'historyLength', :optional => true},
      PARENTDOMAINID => {:type => ::Thrift::Types::STRING, :name => 'parentDomainId', :optional => true},
      PARENTEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'parentExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      EXECUTIONTIME => {:type => ::Thrift::Types::I64, :name => 'executionTime', :optional => true},
      MEMO => {:type => ::Thrift::Types::STRUCT, :name => 'memo', :class => ::CadenceThrift::Memo, :optional => true},
      SEARCHATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'searchAttributes', :class => ::CadenceThrift::SearchAttributes, :optional => true},
      AUTORESETPOINTS => {:type => ::Thrift::Types::STRUCT, :name => 'autoResetPoints', :class => ::CadenceThrift::ResetPoints, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @closeStatus.nil? || ::CadenceThrift::WorkflowExecutionCloseStatus::VALID_VALUES.include?(@closeStatus)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field closeStatus!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowExecutionConfiguration
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TASKLIST = 10
    EXECUTIONSTARTTOCLOSETIMEOUTSECONDS = 20
    TASKSTARTTOCLOSETIMEOUTSECONDS = 30

    FIELDS = {
      TASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'taskList', :class => ::CadenceThrift::TaskList, :optional => true},
      EXECUTIONSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'executionStartToCloseTimeoutSeconds', :optional => true},
      TASKSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'taskStartToCloseTimeoutSeconds', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class TransientDecisionInfo
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SCHEDULEDEVENT = 10
    STARTEDEVENT = 20

    FIELDS = {
      SCHEDULEDEVENT => {:type => ::Thrift::Types::STRUCT, :name => 'scheduledEvent', :class => ::CadenceThrift::HistoryEvent, :optional => true},
      STARTEDEVENT => {:type => ::Thrift::Types::STRUCT, :name => 'startedEvent', :class => ::CadenceThrift::HistoryEvent, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ScheduleActivityTaskDecisionAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    ACTIVITYID = 10
    ACTIVITYTYPE = 20
    DOMAIN = 25
    TASKLIST = 30
    INPUT = 40
    SCHEDULETOCLOSETIMEOUTSECONDS = 45
    SCHEDULETOSTARTTIMEOUTSECONDS = 50
    STARTTOCLOSETIMEOUTSECONDS = 55
    HEARTBEATTIMEOUTSECONDS = 60
    RETRYPOLICY = 70
    HEADER = 80

    FIELDS = {
      ACTIVITYID => {:type => ::Thrift::Types::STRING, :name => 'activityId', :optional => true},
      ACTIVITYTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'activityType', :class => ::CadenceThrift::ActivityType, :optional => true},
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      TASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'taskList', :class => ::CadenceThrift::TaskList, :optional => true},
      INPUT => {:type => ::Thrift::Types::STRING, :name => 'input', :binary => true, :optional => true},
      SCHEDULETOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'scheduleToCloseTimeoutSeconds', :optional => true},
      SCHEDULETOSTARTTIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'scheduleToStartTimeoutSeconds', :optional => true},
      STARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'startToCloseTimeoutSeconds', :optional => true},
      HEARTBEATTIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'heartbeatTimeoutSeconds', :optional => true},
      RETRYPOLICY => {:type => ::Thrift::Types::STRUCT, :name => 'retryPolicy', :class => ::CadenceThrift::RetryPolicy, :optional => true},
      HEADER => {:type => ::Thrift::Types::STRUCT, :name => 'header', :class => ::CadenceThrift::Header, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RequestCancelActivityTaskDecisionAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    ACTIVITYID = 10

    FIELDS = {
      ACTIVITYID => {:type => ::Thrift::Types::STRING, :name => 'activityId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class StartTimerDecisionAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TIMERID = 10
    STARTTOFIRETIMEOUTSECONDS = 20

    FIELDS = {
      TIMERID => {:type => ::Thrift::Types::STRING, :name => 'timerId', :optional => true},
      STARTTOFIRETIMEOUTSECONDS => {:type => ::Thrift::Types::I64, :name => 'startToFireTimeoutSeconds', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class CompleteWorkflowExecutionDecisionAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    RESULT = 10

    FIELDS = {
      RESULT => {:type => ::Thrift::Types::STRING, :name => 'result', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class FailWorkflowExecutionDecisionAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    REASON = 10
    DETAILS = 20

    FIELDS = {
      REASON => {:type => ::Thrift::Types::STRING, :name => 'reason', :optional => true},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class CancelTimerDecisionAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TIMERID = 10

    FIELDS = {
      TIMERID => {:type => ::Thrift::Types::STRING, :name => 'timerId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class CancelWorkflowExecutionDecisionAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DETAILS = 10

    FIELDS = {
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RequestCancelExternalWorkflowExecutionDecisionAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    WORKFLOWID = 20
    RUNID = 30
    CONTROL = 40
    CHILDWORKFLOWONLY = 50

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWID => {:type => ::Thrift::Types::STRING, :name => 'workflowId', :optional => true},
      RUNID => {:type => ::Thrift::Types::STRING, :name => 'runId', :optional => true},
      CONTROL => {:type => ::Thrift::Types::STRING, :name => 'control', :binary => true, :optional => true},
      CHILDWORKFLOWONLY => {:type => ::Thrift::Types::BOOL, :name => 'childWorkflowOnly', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class SignalExternalWorkflowExecutionDecisionAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    EXECUTION = 20
    SIGNALNAME = 30
    INPUT = 40
    CONTROL = 50
    CHILDWORKFLOWONLY = 60

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      EXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'execution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      SIGNALNAME => {:type => ::Thrift::Types::STRING, :name => 'signalName', :optional => true},
      INPUT => {:type => ::Thrift::Types::STRING, :name => 'input', :binary => true, :optional => true},
      CONTROL => {:type => ::Thrift::Types::STRING, :name => 'control', :binary => true, :optional => true},
      CHILDWORKFLOWONLY => {:type => ::Thrift::Types::BOOL, :name => 'childWorkflowOnly', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class UpsertWorkflowSearchAttributesDecisionAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SEARCHATTRIBUTES = 10

    FIELDS = {
      SEARCHATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'searchAttributes', :class => ::CadenceThrift::SearchAttributes, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RecordMarkerDecisionAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    MARKERNAME = 10
    DETAILS = 20
    HEADER = 30

    FIELDS = {
      MARKERNAME => {:type => ::Thrift::Types::STRING, :name => 'markerName', :optional => true},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      HEADER => {:type => ::Thrift::Types::STRUCT, :name => 'header', :class => ::CadenceThrift::Header, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ContinueAsNewWorkflowExecutionDecisionAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    WORKFLOWTYPE = 10
    TASKLIST = 20
    INPUT = 30
    EXECUTIONSTARTTOCLOSETIMEOUTSECONDS = 40
    TASKSTARTTOCLOSETIMEOUTSECONDS = 50
    BACKOFFSTARTINTERVALINSECONDS = 60
    RETRYPOLICY = 70
    INITIATOR = 80
    FAILUREREASON = 90
    FAILUREDETAILS = 100
    LASTCOMPLETIONRESULT = 110
    CRONSCHEDULE = 120
    HEADER = 130
    MEMO = 140
    SEARCHATTRIBUTES = 150

    FIELDS = {
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      TASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'taskList', :class => ::CadenceThrift::TaskList, :optional => true},
      INPUT => {:type => ::Thrift::Types::STRING, :name => 'input', :binary => true, :optional => true},
      EXECUTIONSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'executionStartToCloseTimeoutSeconds', :optional => true},
      TASKSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'taskStartToCloseTimeoutSeconds', :optional => true},
      BACKOFFSTARTINTERVALINSECONDS => {:type => ::Thrift::Types::I32, :name => 'backoffStartIntervalInSeconds', :optional => true},
      RETRYPOLICY => {:type => ::Thrift::Types::STRUCT, :name => 'retryPolicy', :class => ::CadenceThrift::RetryPolicy, :optional => true},
      INITIATOR => {:type => ::Thrift::Types::I32, :name => 'initiator', :optional => true, :enum_class => ::CadenceThrift::ContinueAsNewInitiator},
      FAILUREREASON => {:type => ::Thrift::Types::STRING, :name => 'failureReason', :optional => true},
      FAILUREDETAILS => {:type => ::Thrift::Types::STRING, :name => 'failureDetails', :binary => true, :optional => true},
      LASTCOMPLETIONRESULT => {:type => ::Thrift::Types::STRING, :name => 'lastCompletionResult', :binary => true, :optional => true},
      CRONSCHEDULE => {:type => ::Thrift::Types::STRING, :name => 'cronSchedule', :optional => true},
      HEADER => {:type => ::Thrift::Types::STRUCT, :name => 'header', :class => ::CadenceThrift::Header, :optional => true},
      MEMO => {:type => ::Thrift::Types::STRUCT, :name => 'memo', :class => ::CadenceThrift::Memo, :optional => true},
      SEARCHATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'searchAttributes', :class => ::CadenceThrift::SearchAttributes, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class StartChildWorkflowExecutionDecisionAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    WORKFLOWID = 20
    WORKFLOWTYPE = 30
    TASKLIST = 40
    INPUT = 50
    EXECUTIONSTARTTOCLOSETIMEOUTSECONDS = 60
    TASKSTARTTOCLOSETIMEOUTSECONDS = 70
    PARENTCLOSEPOLICY = 81
    CONTROL = 90
    WORKFLOWIDREUSEPOLICY = 100
    RETRYPOLICY = 110
    CRONSCHEDULE = 120
    HEADER = 130
    MEMO = 140
    SEARCHATTRIBUTES = 150

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWID => {:type => ::Thrift::Types::STRING, :name => 'workflowId', :optional => true},
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      TASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'taskList', :class => ::CadenceThrift::TaskList, :optional => true},
      INPUT => {:type => ::Thrift::Types::STRING, :name => 'input', :binary => true, :optional => true},
      EXECUTIONSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'executionStartToCloseTimeoutSeconds', :optional => true},
      TASKSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'taskStartToCloseTimeoutSeconds', :optional => true},
      PARENTCLOSEPOLICY => {:type => ::Thrift::Types::I32, :name => 'parentClosePolicy', :optional => true, :enum_class => ::CadenceThrift::ParentClosePolicy},
      CONTROL => {:type => ::Thrift::Types::STRING, :name => 'control', :binary => true, :optional => true},
      WORKFLOWIDREUSEPOLICY => {:type => ::Thrift::Types::I32, :name => 'workflowIdReusePolicy', :optional => true, :enum_class => ::CadenceThrift::WorkflowIdReusePolicy},
      RETRYPOLICY => {:type => ::Thrift::Types::STRUCT, :name => 'retryPolicy', :class => ::CadenceThrift::RetryPolicy, :optional => true},
      CRONSCHEDULE => {:type => ::Thrift::Types::STRING, :name => 'cronSchedule', :optional => true},
      HEADER => {:type => ::Thrift::Types::STRUCT, :name => 'header', :class => ::CadenceThrift::Header, :optional => true},
      MEMO => {:type => ::Thrift::Types::STRUCT, :name => 'memo', :class => ::CadenceThrift::Memo, :optional => true},
      SEARCHATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'searchAttributes', :class => ::CadenceThrift::SearchAttributes, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @parentClosePolicy.nil? || ::CadenceThrift::ParentClosePolicy::VALID_VALUES.include?(@parentClosePolicy)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field parentClosePolicy!')
      end
      unless @workflowIdReusePolicy.nil? || ::CadenceThrift::WorkflowIdReusePolicy::VALID_VALUES.include?(@workflowIdReusePolicy)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field workflowIdReusePolicy!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Decision
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DECISIONTYPE = 10
    SCHEDULEACTIVITYTASKDECISIONATTRIBUTES = 20
    STARTTIMERDECISIONATTRIBUTES = 25
    COMPLETEWORKFLOWEXECUTIONDECISIONATTRIBUTES = 30
    FAILWORKFLOWEXECUTIONDECISIONATTRIBUTES = 35
    REQUESTCANCELACTIVITYTASKDECISIONATTRIBUTES = 40
    CANCELTIMERDECISIONATTRIBUTES = 50
    CANCELWORKFLOWEXECUTIONDECISIONATTRIBUTES = 60
    REQUESTCANCELEXTERNALWORKFLOWEXECUTIONDECISIONATTRIBUTES = 70
    RECORDMARKERDECISIONATTRIBUTES = 80
    CONTINUEASNEWWORKFLOWEXECUTIONDECISIONATTRIBUTES = 90
    STARTCHILDWORKFLOWEXECUTIONDECISIONATTRIBUTES = 100
    SIGNALEXTERNALWORKFLOWEXECUTIONDECISIONATTRIBUTES = 110
    UPSERTWORKFLOWSEARCHATTRIBUTESDECISIONATTRIBUTES = 120

    FIELDS = {
      DECISIONTYPE => {:type => ::Thrift::Types::I32, :name => 'decisionType', :optional => true, :enum_class => ::CadenceThrift::DecisionType},
      SCHEDULEACTIVITYTASKDECISIONATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'scheduleActivityTaskDecisionAttributes', :class => ::CadenceThrift::ScheduleActivityTaskDecisionAttributes, :optional => true},
      STARTTIMERDECISIONATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'startTimerDecisionAttributes', :class => ::CadenceThrift::StartTimerDecisionAttributes, :optional => true},
      COMPLETEWORKFLOWEXECUTIONDECISIONATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'completeWorkflowExecutionDecisionAttributes', :class => ::CadenceThrift::CompleteWorkflowExecutionDecisionAttributes, :optional => true},
      FAILWORKFLOWEXECUTIONDECISIONATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'failWorkflowExecutionDecisionAttributes', :class => ::CadenceThrift::FailWorkflowExecutionDecisionAttributes, :optional => true},
      REQUESTCANCELACTIVITYTASKDECISIONATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'requestCancelActivityTaskDecisionAttributes', :class => ::CadenceThrift::RequestCancelActivityTaskDecisionAttributes, :optional => true},
      CANCELTIMERDECISIONATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'cancelTimerDecisionAttributes', :class => ::CadenceThrift::CancelTimerDecisionAttributes, :optional => true},
      CANCELWORKFLOWEXECUTIONDECISIONATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'cancelWorkflowExecutionDecisionAttributes', :class => ::CadenceThrift::CancelWorkflowExecutionDecisionAttributes, :optional => true},
      REQUESTCANCELEXTERNALWORKFLOWEXECUTIONDECISIONATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'requestCancelExternalWorkflowExecutionDecisionAttributes', :class => ::CadenceThrift::RequestCancelExternalWorkflowExecutionDecisionAttributes, :optional => true},
      RECORDMARKERDECISIONATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'recordMarkerDecisionAttributes', :class => ::CadenceThrift::RecordMarkerDecisionAttributes, :optional => true},
      CONTINUEASNEWWORKFLOWEXECUTIONDECISIONATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'continueAsNewWorkflowExecutionDecisionAttributes', :class => ::CadenceThrift::ContinueAsNewWorkflowExecutionDecisionAttributes, :optional => true},
      STARTCHILDWORKFLOWEXECUTIONDECISIONATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'startChildWorkflowExecutionDecisionAttributes', :class => ::CadenceThrift::StartChildWorkflowExecutionDecisionAttributes, :optional => true},
      SIGNALEXTERNALWORKFLOWEXECUTIONDECISIONATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'signalExternalWorkflowExecutionDecisionAttributes', :class => ::CadenceThrift::SignalExternalWorkflowExecutionDecisionAttributes, :optional => true},
      UPSERTWORKFLOWSEARCHATTRIBUTESDECISIONATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'upsertWorkflowSearchAttributesDecisionAttributes', :class => ::CadenceThrift::UpsertWorkflowSearchAttributesDecisionAttributes, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @decisionType.nil? || ::CadenceThrift::DecisionType::VALID_VALUES.include?(@decisionType)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field decisionType!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowExecutionStartedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    WORKFLOWTYPE = 10
    PARENTWORKFLOWDOMAIN = 12
    PARENTWORKFLOWEXECUTION = 14
    PARENTINITIATEDEVENTID = 16
    TASKLIST = 20
    INPUT = 30
    EXECUTIONSTARTTOCLOSETIMEOUTSECONDS = 40
    TASKSTARTTOCLOSETIMEOUTSECONDS = 50
    CONTINUEDEXECUTIONRUNID = 54
    INITIATOR = 55
    CONTINUEDFAILUREREASON = 56
    CONTINUEDFAILUREDETAILS = 57
    LASTCOMPLETIONRESULT = 58
    ORIGINALEXECUTIONRUNID = 59
    IDENTITY = 60
    FIRSTEXECUTIONRUNID = 61
    RETRYPOLICY = 70
    ATTEMPT = 80
    EXPIRATIONTIMESTAMP = 90
    CRONSCHEDULE = 100
    FIRSTDECISIONTASKBACKOFFSECONDS = 110
    MEMO = 120
    SEARCHATTRIBUTES = 121
    PREVAUTORESETPOINTS = 130
    HEADER = 140

    FIELDS = {
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      PARENTWORKFLOWDOMAIN => {:type => ::Thrift::Types::STRING, :name => 'parentWorkflowDomain', :optional => true},
      PARENTWORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'parentWorkflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      PARENTINITIATEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'parentInitiatedEventId', :optional => true},
      TASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'taskList', :class => ::CadenceThrift::TaskList, :optional => true},
      INPUT => {:type => ::Thrift::Types::STRING, :name => 'input', :binary => true, :optional => true},
      EXECUTIONSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'executionStartToCloseTimeoutSeconds', :optional => true},
      TASKSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'taskStartToCloseTimeoutSeconds', :optional => true},
      CONTINUEDEXECUTIONRUNID => {:type => ::Thrift::Types::STRING, :name => 'continuedExecutionRunId', :optional => true},
      INITIATOR => {:type => ::Thrift::Types::I32, :name => 'initiator', :optional => true, :enum_class => ::CadenceThrift::ContinueAsNewInitiator},
      CONTINUEDFAILUREREASON => {:type => ::Thrift::Types::STRING, :name => 'continuedFailureReason', :optional => true},
      CONTINUEDFAILUREDETAILS => {:type => ::Thrift::Types::STRING, :name => 'continuedFailureDetails', :binary => true, :optional => true},
      LASTCOMPLETIONRESULT => {:type => ::Thrift::Types::STRING, :name => 'lastCompletionResult', :binary => true, :optional => true},
      ORIGINALEXECUTIONRUNID => {:type => ::Thrift::Types::STRING, :name => 'originalExecutionRunId', :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true},
      FIRSTEXECUTIONRUNID => {:type => ::Thrift::Types::STRING, :name => 'firstExecutionRunId', :optional => true},
      RETRYPOLICY => {:type => ::Thrift::Types::STRUCT, :name => 'retryPolicy', :class => ::CadenceThrift::RetryPolicy, :optional => true},
      ATTEMPT => {:type => ::Thrift::Types::I32, :name => 'attempt', :optional => true},
      EXPIRATIONTIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'expirationTimestamp', :optional => true},
      CRONSCHEDULE => {:type => ::Thrift::Types::STRING, :name => 'cronSchedule', :optional => true},
      FIRSTDECISIONTASKBACKOFFSECONDS => {:type => ::Thrift::Types::I32, :name => 'firstDecisionTaskBackoffSeconds', :optional => true},
      MEMO => {:type => ::Thrift::Types::STRUCT, :name => 'memo', :class => ::CadenceThrift::Memo, :optional => true},
      SEARCHATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'searchAttributes', :class => ::CadenceThrift::SearchAttributes, :optional => true},
      PREVAUTORESETPOINTS => {:type => ::Thrift::Types::STRUCT, :name => 'prevAutoResetPoints', :class => ::CadenceThrift::ResetPoints, :optional => true},
      HEADER => {:type => ::Thrift::Types::STRUCT, :name => 'header', :class => ::CadenceThrift::Header, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ResetPoints
    include ::Thrift::Struct, ::Thrift::Struct_Union
    POINTS = 10

    FIELDS = {
      POINTS => {:type => ::Thrift::Types::LIST, :name => 'points', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::ResetPointInfo}, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ResetPointInfo
    include ::Thrift::Struct, ::Thrift::Struct_Union
    BINARYCHECKSUM = 10
    RUNID = 20
    FIRSTDECISIONCOMPLETEDID = 30
    CREATEDTIMENANO = 40
    EXPIRINGTIMENANO = 50
    RESETTABLE = 60

    FIELDS = {
      BINARYCHECKSUM => {:type => ::Thrift::Types::STRING, :name => 'binaryChecksum', :optional => true},
      RUNID => {:type => ::Thrift::Types::STRING, :name => 'runId', :optional => true},
      FIRSTDECISIONCOMPLETEDID => {:type => ::Thrift::Types::I64, :name => 'firstDecisionCompletedId', :optional => true},
      CREATEDTIMENANO => {:type => ::Thrift::Types::I64, :name => 'createdTimeNano', :optional => true},
      EXPIRINGTIMENANO => {:type => ::Thrift::Types::I64, :name => 'expiringTimeNano', :optional => true},
      RESETTABLE => {:type => ::Thrift::Types::BOOL, :name => 'resettable', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowExecutionCompletedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    RESULT = 10
    DECISIONTASKCOMPLETEDEVENTID = 20

    FIELDS = {
      RESULT => {:type => ::Thrift::Types::STRING, :name => 'result', :binary => true, :optional => true},
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowExecutionFailedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    REASON = 10
    DETAILS = 20
    DECISIONTASKCOMPLETEDEVENTID = 30

    FIELDS = {
      REASON => {:type => ::Thrift::Types::STRING, :name => 'reason', :optional => true},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowExecutionTimedOutEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TIMEOUTTYPE = 10

    FIELDS = {
      TIMEOUTTYPE => {:type => ::Thrift::Types::I32, :name => 'timeoutType', :optional => true, :enum_class => ::CadenceThrift::TimeoutType}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @timeoutType.nil? || ::CadenceThrift::TimeoutType::VALID_VALUES.include?(@timeoutType)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field timeoutType!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowExecutionContinuedAsNewEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NEWEXECUTIONRUNID = 10
    WORKFLOWTYPE = 20
    TASKLIST = 30
    INPUT = 40
    EXECUTIONSTARTTOCLOSETIMEOUTSECONDS = 50
    TASKSTARTTOCLOSETIMEOUTSECONDS = 60
    DECISIONTASKCOMPLETEDEVENTID = 70
    BACKOFFSTARTINTERVALINSECONDS = 80
    INITIATOR = 90
    FAILUREREASON = 100
    FAILUREDETAILS = 110
    LASTCOMPLETIONRESULT = 120
    HEADER = 130
    MEMO = 140
    SEARCHATTRIBUTES = 150

    FIELDS = {
      NEWEXECUTIONRUNID => {:type => ::Thrift::Types::STRING, :name => 'newExecutionRunId', :optional => true},
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      TASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'taskList', :class => ::CadenceThrift::TaskList, :optional => true},
      INPUT => {:type => ::Thrift::Types::STRING, :name => 'input', :binary => true, :optional => true},
      EXECUTIONSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'executionStartToCloseTimeoutSeconds', :optional => true},
      TASKSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'taskStartToCloseTimeoutSeconds', :optional => true},
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true},
      BACKOFFSTARTINTERVALINSECONDS => {:type => ::Thrift::Types::I32, :name => 'backoffStartIntervalInSeconds', :optional => true},
      INITIATOR => {:type => ::Thrift::Types::I32, :name => 'initiator', :optional => true, :enum_class => ::CadenceThrift::ContinueAsNewInitiator},
      FAILUREREASON => {:type => ::Thrift::Types::STRING, :name => 'failureReason', :optional => true},
      FAILUREDETAILS => {:type => ::Thrift::Types::STRING, :name => 'failureDetails', :binary => true, :optional => true},
      LASTCOMPLETIONRESULT => {:type => ::Thrift::Types::STRING, :name => 'lastCompletionResult', :binary => true, :optional => true},
      HEADER => {:type => ::Thrift::Types::STRUCT, :name => 'header', :class => ::CadenceThrift::Header, :optional => true},
      MEMO => {:type => ::Thrift::Types::STRUCT, :name => 'memo', :class => ::CadenceThrift::Memo, :optional => true},
      SEARCHATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'searchAttributes', :class => ::CadenceThrift::SearchAttributes, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @initiator.nil? || ::CadenceThrift::ContinueAsNewInitiator::VALID_VALUES.include?(@initiator)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field initiator!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DecisionTaskScheduledEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TASKLIST = 10
    STARTTOCLOSETIMEOUTSECONDS = 20
    ATTEMPT = 30

    FIELDS = {
      TASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'taskList', :class => ::CadenceThrift::TaskList, :optional => true},
      STARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'startToCloseTimeoutSeconds', :optional => true},
      ATTEMPT => {:type => ::Thrift::Types::I64, :name => 'attempt', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DecisionTaskStartedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SCHEDULEDEVENTID = 10
    IDENTITY = 20
    REQUESTID = 30

    FIELDS = {
      SCHEDULEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'scheduledEventId', :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true},
      REQUESTID => {:type => ::Thrift::Types::STRING, :name => 'requestId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DecisionTaskCompletedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    EXECUTIONCONTEXT = 10
    SCHEDULEDEVENTID = 20
    STARTEDEVENTID = 30
    IDENTITY = 40
    BINARYCHECKSUM = 50

    FIELDS = {
      EXECUTIONCONTEXT => {:type => ::Thrift::Types::STRING, :name => 'executionContext', :binary => true, :optional => true},
      SCHEDULEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'scheduledEventId', :optional => true},
      STARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'startedEventId', :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true},
      BINARYCHECKSUM => {:type => ::Thrift::Types::STRING, :name => 'binaryChecksum', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DecisionTaskTimedOutEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SCHEDULEDEVENTID = 10
    STARTEDEVENTID = 20
    TIMEOUTTYPE = 30

    FIELDS = {
      SCHEDULEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'scheduledEventId', :optional => true},
      STARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'startedEventId', :optional => true},
      TIMEOUTTYPE => {:type => ::Thrift::Types::I32, :name => 'timeoutType', :optional => true, :enum_class => ::CadenceThrift::TimeoutType}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @timeoutType.nil? || ::CadenceThrift::TimeoutType::VALID_VALUES.include?(@timeoutType)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field timeoutType!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DecisionTaskFailedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SCHEDULEDEVENTID = 10
    STARTEDEVENTID = 20
    CAUSE = 30
    DETAILS = 35
    IDENTITY = 40
    REASON = 50
    BASERUNID = 60
    NEWRUNID = 70
    FORKEVENTVERSION = 80

    FIELDS = {
      SCHEDULEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'scheduledEventId', :optional => true},
      STARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'startedEventId', :optional => true},
      CAUSE => {:type => ::Thrift::Types::I32, :name => 'cause', :optional => true, :enum_class => ::CadenceThrift::DecisionTaskFailedCause},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true},
      REASON => {:type => ::Thrift::Types::STRING, :name => 'reason', :optional => true},
      BASERUNID => {:type => ::Thrift::Types::STRING, :name => 'baseRunId', :optional => true},
      NEWRUNID => {:type => ::Thrift::Types::STRING, :name => 'newRunId', :optional => true},
      FORKEVENTVERSION => {:type => ::Thrift::Types::I64, :name => 'forkEventVersion', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @cause.nil? || ::CadenceThrift::DecisionTaskFailedCause::VALID_VALUES.include?(@cause)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field cause!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ActivityTaskScheduledEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    ACTIVITYID = 10
    ACTIVITYTYPE = 20
    DOMAIN = 25
    TASKLIST = 30
    INPUT = 40
    SCHEDULETOCLOSETIMEOUTSECONDS = 45
    SCHEDULETOSTARTTIMEOUTSECONDS = 50
    STARTTOCLOSETIMEOUTSECONDS = 55
    HEARTBEATTIMEOUTSECONDS = 60
    DECISIONTASKCOMPLETEDEVENTID = 90
    RETRYPOLICY = 110
    HEADER = 120

    FIELDS = {
      ACTIVITYID => {:type => ::Thrift::Types::STRING, :name => 'activityId', :optional => true},
      ACTIVITYTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'activityType', :class => ::CadenceThrift::ActivityType, :optional => true},
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      TASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'taskList', :class => ::CadenceThrift::TaskList, :optional => true},
      INPUT => {:type => ::Thrift::Types::STRING, :name => 'input', :binary => true, :optional => true},
      SCHEDULETOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'scheduleToCloseTimeoutSeconds', :optional => true},
      SCHEDULETOSTARTTIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'scheduleToStartTimeoutSeconds', :optional => true},
      STARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'startToCloseTimeoutSeconds', :optional => true},
      HEARTBEATTIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'heartbeatTimeoutSeconds', :optional => true},
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true},
      RETRYPOLICY => {:type => ::Thrift::Types::STRUCT, :name => 'retryPolicy', :class => ::CadenceThrift::RetryPolicy, :optional => true},
      HEADER => {:type => ::Thrift::Types::STRUCT, :name => 'header', :class => ::CadenceThrift::Header, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ActivityTaskStartedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SCHEDULEDEVENTID = 10
    IDENTITY = 20
    REQUESTID = 30
    ATTEMPT = 40

    FIELDS = {
      SCHEDULEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'scheduledEventId', :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true},
      REQUESTID => {:type => ::Thrift::Types::STRING, :name => 'requestId', :optional => true},
      ATTEMPT => {:type => ::Thrift::Types::I32, :name => 'attempt', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ActivityTaskCompletedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    RESULT = 10
    SCHEDULEDEVENTID = 20
    STARTEDEVENTID = 30
    IDENTITY = 40

    FIELDS = {
      RESULT => {:type => ::Thrift::Types::STRING, :name => 'result', :binary => true, :optional => true},
      SCHEDULEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'scheduledEventId', :optional => true},
      STARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'startedEventId', :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ActivityTaskFailedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    REASON = 10
    DETAILS = 20
    SCHEDULEDEVENTID = 30
    STARTEDEVENTID = 40
    IDENTITY = 50

    FIELDS = {
      REASON => {:type => ::Thrift::Types::STRING, :name => 'reason', :optional => true},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      SCHEDULEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'scheduledEventId', :optional => true},
      STARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'startedEventId', :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ActivityTaskTimedOutEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DETAILS = 5
    SCHEDULEDEVENTID = 10
    STARTEDEVENTID = 20
    TIMEOUTTYPE = 30

    FIELDS = {
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      SCHEDULEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'scheduledEventId', :optional => true},
      STARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'startedEventId', :optional => true},
      TIMEOUTTYPE => {:type => ::Thrift::Types::I32, :name => 'timeoutType', :optional => true, :enum_class => ::CadenceThrift::TimeoutType}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @timeoutType.nil? || ::CadenceThrift::TimeoutType::VALID_VALUES.include?(@timeoutType)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field timeoutType!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ActivityTaskCancelRequestedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    ACTIVITYID = 10
    DECISIONTASKCOMPLETEDEVENTID = 20

    FIELDS = {
      ACTIVITYID => {:type => ::Thrift::Types::STRING, :name => 'activityId', :optional => true},
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RequestCancelActivityTaskFailedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    ACTIVITYID = 10
    CAUSE = 20
    DECISIONTASKCOMPLETEDEVENTID = 30

    FIELDS = {
      ACTIVITYID => {:type => ::Thrift::Types::STRING, :name => 'activityId', :optional => true},
      CAUSE => {:type => ::Thrift::Types::STRING, :name => 'cause', :optional => true},
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ActivityTaskCanceledEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DETAILS = 10
    LATESTCANCELREQUESTEDEVENTID = 20
    SCHEDULEDEVENTID = 30
    STARTEDEVENTID = 40
    IDENTITY = 50

    FIELDS = {
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      LATESTCANCELREQUESTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'latestCancelRequestedEventId', :optional => true},
      SCHEDULEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'scheduledEventId', :optional => true},
      STARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'startedEventId', :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class TimerStartedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TIMERID = 10
    STARTTOFIRETIMEOUTSECONDS = 20
    DECISIONTASKCOMPLETEDEVENTID = 30

    FIELDS = {
      TIMERID => {:type => ::Thrift::Types::STRING, :name => 'timerId', :optional => true},
      STARTTOFIRETIMEOUTSECONDS => {:type => ::Thrift::Types::I64, :name => 'startToFireTimeoutSeconds', :optional => true},
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class TimerFiredEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TIMERID = 10
    STARTEDEVENTID = 20

    FIELDS = {
      TIMERID => {:type => ::Thrift::Types::STRING, :name => 'timerId', :optional => true},
      STARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'startedEventId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class TimerCanceledEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TIMERID = 10
    STARTEDEVENTID = 20
    DECISIONTASKCOMPLETEDEVENTID = 30
    IDENTITY = 40

    FIELDS = {
      TIMERID => {:type => ::Thrift::Types::STRING, :name => 'timerId', :optional => true},
      STARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'startedEventId', :optional => true},
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class CancelTimerFailedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TIMERID = 10
    CAUSE = 20
    DECISIONTASKCOMPLETEDEVENTID = 30
    IDENTITY = 40

    FIELDS = {
      TIMERID => {:type => ::Thrift::Types::STRING, :name => 'timerId', :optional => true},
      CAUSE => {:type => ::Thrift::Types::STRING, :name => 'cause', :optional => true},
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowExecutionCancelRequestedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    CAUSE = 10
    EXTERNALINITIATEDEVENTID = 20
    EXTERNALWORKFLOWEXECUTION = 30
    IDENTITY = 40

    FIELDS = {
      CAUSE => {:type => ::Thrift::Types::STRING, :name => 'cause', :optional => true},
      EXTERNALINITIATEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'externalInitiatedEventId', :optional => true},
      EXTERNALWORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'externalWorkflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowExecutionCanceledEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DECISIONTASKCOMPLETEDEVENTID = 10
    DETAILS = 20

    FIELDS = {
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class MarkerRecordedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    MARKERNAME = 10
    DETAILS = 20
    DECISIONTASKCOMPLETEDEVENTID = 30
    HEADER = 40

    FIELDS = {
      MARKERNAME => {:type => ::Thrift::Types::STRING, :name => 'markerName', :optional => true},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true},
      HEADER => {:type => ::Thrift::Types::STRUCT, :name => 'header', :class => ::CadenceThrift::Header, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowExecutionSignaledEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SIGNALNAME = 10
    INPUT = 20
    IDENTITY = 30

    FIELDS = {
      SIGNALNAME => {:type => ::Thrift::Types::STRING, :name => 'signalName', :optional => true},
      INPUT => {:type => ::Thrift::Types::STRING, :name => 'input', :binary => true, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowExecutionTerminatedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    REASON = 10
    DETAILS = 20
    IDENTITY = 30

    FIELDS = {
      REASON => {:type => ::Thrift::Types::STRING, :name => 'reason', :optional => true},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RequestCancelExternalWorkflowExecutionInitiatedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DECISIONTASKCOMPLETEDEVENTID = 10
    DOMAIN = 20
    WORKFLOWEXECUTION = 30
    CONTROL = 40
    CHILDWORKFLOWONLY = 50

    FIELDS = {
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true},
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      CONTROL => {:type => ::Thrift::Types::STRING, :name => 'control', :binary => true, :optional => true},
      CHILDWORKFLOWONLY => {:type => ::Thrift::Types::BOOL, :name => 'childWorkflowOnly', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RequestCancelExternalWorkflowExecutionFailedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    CAUSE = 10
    DECISIONTASKCOMPLETEDEVENTID = 20
    DOMAIN = 30
    WORKFLOWEXECUTION = 40
    INITIATEDEVENTID = 50
    CONTROL = 60

    FIELDS = {
      CAUSE => {:type => ::Thrift::Types::I32, :name => 'cause', :optional => true, :enum_class => ::CadenceThrift::CancelExternalWorkflowExecutionFailedCause},
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true},
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      INITIATEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'initiatedEventId', :optional => true},
      CONTROL => {:type => ::Thrift::Types::STRING, :name => 'control', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @cause.nil? || ::CadenceThrift::CancelExternalWorkflowExecutionFailedCause::VALID_VALUES.include?(@cause)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field cause!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ExternalWorkflowExecutionCancelRequestedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    INITIATEDEVENTID = 10
    DOMAIN = 20
    WORKFLOWEXECUTION = 30

    FIELDS = {
      INITIATEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'initiatedEventId', :optional => true},
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class SignalExternalWorkflowExecutionInitiatedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DECISIONTASKCOMPLETEDEVENTID = 10
    DOMAIN = 20
    WORKFLOWEXECUTION = 30
    SIGNALNAME = 40
    INPUT = 50
    CONTROL = 60
    CHILDWORKFLOWONLY = 70

    FIELDS = {
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true},
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      SIGNALNAME => {:type => ::Thrift::Types::STRING, :name => 'signalName', :optional => true},
      INPUT => {:type => ::Thrift::Types::STRING, :name => 'input', :binary => true, :optional => true},
      CONTROL => {:type => ::Thrift::Types::STRING, :name => 'control', :binary => true, :optional => true},
      CHILDWORKFLOWONLY => {:type => ::Thrift::Types::BOOL, :name => 'childWorkflowOnly', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class SignalExternalWorkflowExecutionFailedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    CAUSE = 10
    DECISIONTASKCOMPLETEDEVENTID = 20
    DOMAIN = 30
    WORKFLOWEXECUTION = 40
    INITIATEDEVENTID = 50
    CONTROL = 60

    FIELDS = {
      CAUSE => {:type => ::Thrift::Types::I32, :name => 'cause', :optional => true, :enum_class => ::CadenceThrift::SignalExternalWorkflowExecutionFailedCause},
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true},
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      INITIATEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'initiatedEventId', :optional => true},
      CONTROL => {:type => ::Thrift::Types::STRING, :name => 'control', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @cause.nil? || ::CadenceThrift::SignalExternalWorkflowExecutionFailedCause::VALID_VALUES.include?(@cause)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field cause!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ExternalWorkflowExecutionSignaledEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    INITIATEDEVENTID = 10
    DOMAIN = 20
    WORKFLOWEXECUTION = 30
    CONTROL = 40

    FIELDS = {
      INITIATEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'initiatedEventId', :optional => true},
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      CONTROL => {:type => ::Thrift::Types::STRING, :name => 'control', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class UpsertWorkflowSearchAttributesEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DECISIONTASKCOMPLETEDEVENTID = 10
    SEARCHATTRIBUTES = 20

    FIELDS = {
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true},
      SEARCHATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'searchAttributes', :class => ::CadenceThrift::SearchAttributes, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class StartChildWorkflowExecutionInitiatedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    WORKFLOWID = 20
    WORKFLOWTYPE = 30
    TASKLIST = 40
    INPUT = 50
    EXECUTIONSTARTTOCLOSETIMEOUTSECONDS = 60
    TASKSTARTTOCLOSETIMEOUTSECONDS = 70
    PARENTCLOSEPOLICY = 81
    CONTROL = 90
    DECISIONTASKCOMPLETEDEVENTID = 100
    WORKFLOWIDREUSEPOLICY = 110
    RETRYPOLICY = 120
    CRONSCHEDULE = 130
    HEADER = 140
    MEMO = 150
    SEARCHATTRIBUTES = 160

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWID => {:type => ::Thrift::Types::STRING, :name => 'workflowId', :optional => true},
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      TASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'taskList', :class => ::CadenceThrift::TaskList, :optional => true},
      INPUT => {:type => ::Thrift::Types::STRING, :name => 'input', :binary => true, :optional => true},
      EXECUTIONSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'executionStartToCloseTimeoutSeconds', :optional => true},
      TASKSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'taskStartToCloseTimeoutSeconds', :optional => true},
      PARENTCLOSEPOLICY => {:type => ::Thrift::Types::I32, :name => 'parentClosePolicy', :optional => true, :enum_class => ::CadenceThrift::ParentClosePolicy},
      CONTROL => {:type => ::Thrift::Types::STRING, :name => 'control', :binary => true, :optional => true},
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true},
      WORKFLOWIDREUSEPOLICY => {:type => ::Thrift::Types::I32, :name => 'workflowIdReusePolicy', :optional => true, :enum_class => ::CadenceThrift::WorkflowIdReusePolicy},
      RETRYPOLICY => {:type => ::Thrift::Types::STRUCT, :name => 'retryPolicy', :class => ::CadenceThrift::RetryPolicy, :optional => true},
      CRONSCHEDULE => {:type => ::Thrift::Types::STRING, :name => 'cronSchedule', :optional => true},
      HEADER => {:type => ::Thrift::Types::STRUCT, :name => 'header', :class => ::CadenceThrift::Header, :optional => true},
      MEMO => {:type => ::Thrift::Types::STRUCT, :name => 'memo', :class => ::CadenceThrift::Memo, :optional => true},
      SEARCHATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'searchAttributes', :class => ::CadenceThrift::SearchAttributes, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @parentClosePolicy.nil? || ::CadenceThrift::ParentClosePolicy::VALID_VALUES.include?(@parentClosePolicy)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field parentClosePolicy!')
      end
      unless @workflowIdReusePolicy.nil? || ::CadenceThrift::WorkflowIdReusePolicy::VALID_VALUES.include?(@workflowIdReusePolicy)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field workflowIdReusePolicy!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class StartChildWorkflowExecutionFailedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    WORKFLOWID = 20
    WORKFLOWTYPE = 30
    CAUSE = 40
    CONTROL = 50
    INITIATEDEVENTID = 60
    DECISIONTASKCOMPLETEDEVENTID = 70

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWID => {:type => ::Thrift::Types::STRING, :name => 'workflowId', :optional => true},
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      CAUSE => {:type => ::Thrift::Types::I32, :name => 'cause', :optional => true, :enum_class => ::CadenceThrift::ChildWorkflowExecutionFailedCause},
      CONTROL => {:type => ::Thrift::Types::STRING, :name => 'control', :binary => true, :optional => true},
      INITIATEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'initiatedEventId', :optional => true},
      DECISIONTASKCOMPLETEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionTaskCompletedEventId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @cause.nil? || ::CadenceThrift::ChildWorkflowExecutionFailedCause::VALID_VALUES.include?(@cause)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field cause!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ChildWorkflowExecutionStartedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    INITIATEDEVENTID = 20
    WORKFLOWEXECUTION = 30
    WORKFLOWTYPE = 40
    HEADER = 50

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      INITIATEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'initiatedEventId', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      HEADER => {:type => ::Thrift::Types::STRUCT, :name => 'header', :class => ::CadenceThrift::Header, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ChildWorkflowExecutionCompletedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    RESULT = 10
    DOMAIN = 20
    WORKFLOWEXECUTION = 30
    WORKFLOWTYPE = 40
    INITIATEDEVENTID = 50
    STARTEDEVENTID = 60

    FIELDS = {
      RESULT => {:type => ::Thrift::Types::STRING, :name => 'result', :binary => true, :optional => true},
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      INITIATEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'initiatedEventId', :optional => true},
      STARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'startedEventId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ChildWorkflowExecutionFailedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    REASON = 10
    DETAILS = 20
    DOMAIN = 30
    WORKFLOWEXECUTION = 40
    WORKFLOWTYPE = 50
    INITIATEDEVENTID = 60
    STARTEDEVENTID = 70

    FIELDS = {
      REASON => {:type => ::Thrift::Types::STRING, :name => 'reason', :optional => true},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      INITIATEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'initiatedEventId', :optional => true},
      STARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'startedEventId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ChildWorkflowExecutionCanceledEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DETAILS = 10
    DOMAIN = 20
    WORKFLOWEXECUTION = 30
    WORKFLOWTYPE = 40
    INITIATEDEVENTID = 50
    STARTEDEVENTID = 60

    FIELDS = {
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      INITIATEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'initiatedEventId', :optional => true},
      STARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'startedEventId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ChildWorkflowExecutionTimedOutEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TIMEOUTTYPE = 10
    DOMAIN = 20
    WORKFLOWEXECUTION = 30
    WORKFLOWTYPE = 40
    INITIATEDEVENTID = 50
    STARTEDEVENTID = 60

    FIELDS = {
      TIMEOUTTYPE => {:type => ::Thrift::Types::I32, :name => 'timeoutType', :optional => true, :enum_class => ::CadenceThrift::TimeoutType},
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      INITIATEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'initiatedEventId', :optional => true},
      STARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'startedEventId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @timeoutType.nil? || ::CadenceThrift::TimeoutType::VALID_VALUES.include?(@timeoutType)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field timeoutType!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ChildWorkflowExecutionTerminatedEventAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    WORKFLOWEXECUTION = 20
    WORKFLOWTYPE = 30
    INITIATEDEVENTID = 40
    STARTEDEVENTID = 50

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      INITIATEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'initiatedEventId', :optional => true},
      STARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'startedEventId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class HistoryEvent
    include ::Thrift::Struct, ::Thrift::Struct_Union
    EVENTID = 10
    TIMESTAMP = 20
    EVENTTYPE = 30
    VERSION = 35
    TASKID = 36
    WORKFLOWEXECUTIONSTARTEDEVENTATTRIBUTES = 40
    WORKFLOWEXECUTIONCOMPLETEDEVENTATTRIBUTES = 50
    WORKFLOWEXECUTIONFAILEDEVENTATTRIBUTES = 60
    WORKFLOWEXECUTIONTIMEDOUTEVENTATTRIBUTES = 70
    DECISIONTASKSCHEDULEDEVENTATTRIBUTES = 80
    DECISIONTASKSTARTEDEVENTATTRIBUTES = 90
    DECISIONTASKCOMPLETEDEVENTATTRIBUTES = 100
    DECISIONTASKTIMEDOUTEVENTATTRIBUTES = 110
    DECISIONTASKFAILEDEVENTATTRIBUTES = 120
    ACTIVITYTASKSCHEDULEDEVENTATTRIBUTES = 130
    ACTIVITYTASKSTARTEDEVENTATTRIBUTES = 140
    ACTIVITYTASKCOMPLETEDEVENTATTRIBUTES = 150
    ACTIVITYTASKFAILEDEVENTATTRIBUTES = 160
    ACTIVITYTASKTIMEDOUTEVENTATTRIBUTES = 170
    TIMERSTARTEDEVENTATTRIBUTES = 180
    TIMERFIREDEVENTATTRIBUTES = 190
    ACTIVITYTASKCANCELREQUESTEDEVENTATTRIBUTES = 200
    REQUESTCANCELACTIVITYTASKFAILEDEVENTATTRIBUTES = 210
    ACTIVITYTASKCANCELEDEVENTATTRIBUTES = 220
    TIMERCANCELEDEVENTATTRIBUTES = 230
    CANCELTIMERFAILEDEVENTATTRIBUTES = 240
    MARKERRECORDEDEVENTATTRIBUTES = 250
    WORKFLOWEXECUTIONSIGNALEDEVENTATTRIBUTES = 260
    WORKFLOWEXECUTIONTERMINATEDEVENTATTRIBUTES = 270
    WORKFLOWEXECUTIONCANCELREQUESTEDEVENTATTRIBUTES = 280
    WORKFLOWEXECUTIONCANCELEDEVENTATTRIBUTES = 290
    REQUESTCANCELEXTERNALWORKFLOWEXECUTIONINITIATEDEVENTATTRIBUTES = 300
    REQUESTCANCELEXTERNALWORKFLOWEXECUTIONFAILEDEVENTATTRIBUTES = 310
    EXTERNALWORKFLOWEXECUTIONCANCELREQUESTEDEVENTATTRIBUTES = 320
    WORKFLOWEXECUTIONCONTINUEDASNEWEVENTATTRIBUTES = 330
    STARTCHILDWORKFLOWEXECUTIONINITIATEDEVENTATTRIBUTES = 340
    STARTCHILDWORKFLOWEXECUTIONFAILEDEVENTATTRIBUTES = 350
    CHILDWORKFLOWEXECUTIONSTARTEDEVENTATTRIBUTES = 360
    CHILDWORKFLOWEXECUTIONCOMPLETEDEVENTATTRIBUTES = 370
    CHILDWORKFLOWEXECUTIONFAILEDEVENTATTRIBUTES = 380
    CHILDWORKFLOWEXECUTIONCANCELEDEVENTATTRIBUTES = 390
    CHILDWORKFLOWEXECUTIONTIMEDOUTEVENTATTRIBUTES = 400
    CHILDWORKFLOWEXECUTIONTERMINATEDEVENTATTRIBUTES = 410
    SIGNALEXTERNALWORKFLOWEXECUTIONINITIATEDEVENTATTRIBUTES = 420
    SIGNALEXTERNALWORKFLOWEXECUTIONFAILEDEVENTATTRIBUTES = 430
    EXTERNALWORKFLOWEXECUTIONSIGNALEDEVENTATTRIBUTES = 440
    UPSERTWORKFLOWSEARCHATTRIBUTESEVENTATTRIBUTES = 450

    FIELDS = {
      EVENTID => {:type => ::Thrift::Types::I64, :name => 'eventId', :optional => true},
      TIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'timestamp', :optional => true},
      EVENTTYPE => {:type => ::Thrift::Types::I32, :name => 'eventType', :optional => true, :enum_class => ::CadenceThrift::EventType},
      VERSION => {:type => ::Thrift::Types::I64, :name => 'version', :optional => true},
      TASKID => {:type => ::Thrift::Types::I64, :name => 'taskId', :optional => true},
      WORKFLOWEXECUTIONSTARTEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecutionStartedEventAttributes', :class => ::CadenceThrift::WorkflowExecutionStartedEventAttributes, :optional => true},
      WORKFLOWEXECUTIONCOMPLETEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecutionCompletedEventAttributes', :class => ::CadenceThrift::WorkflowExecutionCompletedEventAttributes, :optional => true},
      WORKFLOWEXECUTIONFAILEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecutionFailedEventAttributes', :class => ::CadenceThrift::WorkflowExecutionFailedEventAttributes, :optional => true},
      WORKFLOWEXECUTIONTIMEDOUTEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecutionTimedOutEventAttributes', :class => ::CadenceThrift::WorkflowExecutionTimedOutEventAttributes, :optional => true},
      DECISIONTASKSCHEDULEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'decisionTaskScheduledEventAttributes', :class => ::CadenceThrift::DecisionTaskScheduledEventAttributes, :optional => true},
      DECISIONTASKSTARTEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'decisionTaskStartedEventAttributes', :class => ::CadenceThrift::DecisionTaskStartedEventAttributes, :optional => true},
      DECISIONTASKCOMPLETEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'decisionTaskCompletedEventAttributes', :class => ::CadenceThrift::DecisionTaskCompletedEventAttributes, :optional => true},
      DECISIONTASKTIMEDOUTEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'decisionTaskTimedOutEventAttributes', :class => ::CadenceThrift::DecisionTaskTimedOutEventAttributes, :optional => true},
      DECISIONTASKFAILEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'decisionTaskFailedEventAttributes', :class => ::CadenceThrift::DecisionTaskFailedEventAttributes, :optional => true},
      ACTIVITYTASKSCHEDULEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'activityTaskScheduledEventAttributes', :class => ::CadenceThrift::ActivityTaskScheduledEventAttributes, :optional => true},
      ACTIVITYTASKSTARTEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'activityTaskStartedEventAttributes', :class => ::CadenceThrift::ActivityTaskStartedEventAttributes, :optional => true},
      ACTIVITYTASKCOMPLETEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'activityTaskCompletedEventAttributes', :class => ::CadenceThrift::ActivityTaskCompletedEventAttributes, :optional => true},
      ACTIVITYTASKFAILEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'activityTaskFailedEventAttributes', :class => ::CadenceThrift::ActivityTaskFailedEventAttributes, :optional => true},
      ACTIVITYTASKTIMEDOUTEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'activityTaskTimedOutEventAttributes', :class => ::CadenceThrift::ActivityTaskTimedOutEventAttributes, :optional => true},
      TIMERSTARTEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'timerStartedEventAttributes', :class => ::CadenceThrift::TimerStartedEventAttributes, :optional => true},
      TIMERFIREDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'timerFiredEventAttributes', :class => ::CadenceThrift::TimerFiredEventAttributes, :optional => true},
      ACTIVITYTASKCANCELREQUESTEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'activityTaskCancelRequestedEventAttributes', :class => ::CadenceThrift::ActivityTaskCancelRequestedEventAttributes, :optional => true},
      REQUESTCANCELACTIVITYTASKFAILEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'requestCancelActivityTaskFailedEventAttributes', :class => ::CadenceThrift::RequestCancelActivityTaskFailedEventAttributes, :optional => true},
      ACTIVITYTASKCANCELEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'activityTaskCanceledEventAttributes', :class => ::CadenceThrift::ActivityTaskCanceledEventAttributes, :optional => true},
      TIMERCANCELEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'timerCanceledEventAttributes', :class => ::CadenceThrift::TimerCanceledEventAttributes, :optional => true},
      CANCELTIMERFAILEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'cancelTimerFailedEventAttributes', :class => ::CadenceThrift::CancelTimerFailedEventAttributes, :optional => true},
      MARKERRECORDEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'markerRecordedEventAttributes', :class => ::CadenceThrift::MarkerRecordedEventAttributes, :optional => true},
      WORKFLOWEXECUTIONSIGNALEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecutionSignaledEventAttributes', :class => ::CadenceThrift::WorkflowExecutionSignaledEventAttributes, :optional => true},
      WORKFLOWEXECUTIONTERMINATEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecutionTerminatedEventAttributes', :class => ::CadenceThrift::WorkflowExecutionTerminatedEventAttributes, :optional => true},
      WORKFLOWEXECUTIONCANCELREQUESTEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecutionCancelRequestedEventAttributes', :class => ::CadenceThrift::WorkflowExecutionCancelRequestedEventAttributes, :optional => true},
      WORKFLOWEXECUTIONCANCELEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecutionCanceledEventAttributes', :class => ::CadenceThrift::WorkflowExecutionCanceledEventAttributes, :optional => true},
      REQUESTCANCELEXTERNALWORKFLOWEXECUTIONINITIATEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'requestCancelExternalWorkflowExecutionInitiatedEventAttributes', :class => ::CadenceThrift::RequestCancelExternalWorkflowExecutionInitiatedEventAttributes, :optional => true},
      REQUESTCANCELEXTERNALWORKFLOWEXECUTIONFAILEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'requestCancelExternalWorkflowExecutionFailedEventAttributes', :class => ::CadenceThrift::RequestCancelExternalWorkflowExecutionFailedEventAttributes, :optional => true},
      EXTERNALWORKFLOWEXECUTIONCANCELREQUESTEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'externalWorkflowExecutionCancelRequestedEventAttributes', :class => ::CadenceThrift::ExternalWorkflowExecutionCancelRequestedEventAttributes, :optional => true},
      WORKFLOWEXECUTIONCONTINUEDASNEWEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecutionContinuedAsNewEventAttributes', :class => ::CadenceThrift::WorkflowExecutionContinuedAsNewEventAttributes, :optional => true},
      STARTCHILDWORKFLOWEXECUTIONINITIATEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'startChildWorkflowExecutionInitiatedEventAttributes', :class => ::CadenceThrift::StartChildWorkflowExecutionInitiatedEventAttributes, :optional => true},
      STARTCHILDWORKFLOWEXECUTIONFAILEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'startChildWorkflowExecutionFailedEventAttributes', :class => ::CadenceThrift::StartChildWorkflowExecutionFailedEventAttributes, :optional => true},
      CHILDWORKFLOWEXECUTIONSTARTEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'childWorkflowExecutionStartedEventAttributes', :class => ::CadenceThrift::ChildWorkflowExecutionStartedEventAttributes, :optional => true},
      CHILDWORKFLOWEXECUTIONCOMPLETEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'childWorkflowExecutionCompletedEventAttributes', :class => ::CadenceThrift::ChildWorkflowExecutionCompletedEventAttributes, :optional => true},
      CHILDWORKFLOWEXECUTIONFAILEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'childWorkflowExecutionFailedEventAttributes', :class => ::CadenceThrift::ChildWorkflowExecutionFailedEventAttributes, :optional => true},
      CHILDWORKFLOWEXECUTIONCANCELEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'childWorkflowExecutionCanceledEventAttributes', :class => ::CadenceThrift::ChildWorkflowExecutionCanceledEventAttributes, :optional => true},
      CHILDWORKFLOWEXECUTIONTIMEDOUTEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'childWorkflowExecutionTimedOutEventAttributes', :class => ::CadenceThrift::ChildWorkflowExecutionTimedOutEventAttributes, :optional => true},
      CHILDWORKFLOWEXECUTIONTERMINATEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'childWorkflowExecutionTerminatedEventAttributes', :class => ::CadenceThrift::ChildWorkflowExecutionTerminatedEventAttributes, :optional => true},
      SIGNALEXTERNALWORKFLOWEXECUTIONINITIATEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'signalExternalWorkflowExecutionInitiatedEventAttributes', :class => ::CadenceThrift::SignalExternalWorkflowExecutionInitiatedEventAttributes, :optional => true},
      SIGNALEXTERNALWORKFLOWEXECUTIONFAILEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'signalExternalWorkflowExecutionFailedEventAttributes', :class => ::CadenceThrift::SignalExternalWorkflowExecutionFailedEventAttributes, :optional => true},
      EXTERNALWORKFLOWEXECUTIONSIGNALEDEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'externalWorkflowExecutionSignaledEventAttributes', :class => ::CadenceThrift::ExternalWorkflowExecutionSignaledEventAttributes, :optional => true},
      UPSERTWORKFLOWSEARCHATTRIBUTESEVENTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'upsertWorkflowSearchAttributesEventAttributes', :class => ::CadenceThrift::UpsertWorkflowSearchAttributesEventAttributes, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @eventType.nil? || ::CadenceThrift::EventType::VALID_VALUES.include?(@eventType)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field eventType!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class History
    include ::Thrift::Struct, ::Thrift::Struct_Union
    EVENTS = 10

    FIELDS = {
      EVENTS => {:type => ::Thrift::Types::LIST, :name => 'events', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::HistoryEvent}, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowExecutionFilter
    include ::Thrift::Struct, ::Thrift::Struct_Union
    WORKFLOWID = 10
    RUNID = 20

    FIELDS = {
      WORKFLOWID => {:type => ::Thrift::Types::STRING, :name => 'workflowId', :optional => true},
      RUNID => {:type => ::Thrift::Types::STRING, :name => 'runId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowTypeFilter
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NAME = 10

    FIELDS = {
      NAME => {:type => ::Thrift::Types::STRING, :name => 'name', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class StartTimeFilter
    include ::Thrift::Struct, ::Thrift::Struct_Union
    EARLIESTTIME = 10
    LATESTTIME = 20

    FIELDS = {
      EARLIESTTIME => {:type => ::Thrift::Types::I64, :name => 'earliestTime', :optional => true},
      LATESTTIME => {:type => ::Thrift::Types::I64, :name => 'latestTime', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DomainInfo
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NAME = 10
    STATUS = 20
    DESCRIPTION = 30
    OWNEREMAIL = 40
    DATA = 50
    UUID = 60

    FIELDS = {
      NAME => {:type => ::Thrift::Types::STRING, :name => 'name', :optional => true},
      STATUS => {:type => ::Thrift::Types::I32, :name => 'status', :optional => true, :enum_class => ::CadenceThrift::DomainStatus},
      DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description', :optional => true},
      OWNEREMAIL => {:type => ::Thrift::Types::STRING, :name => 'ownerEmail', :optional => true},
      DATA => {:type => ::Thrift::Types::MAP, :name => 'data', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}, :optional => true},
      UUID => {:type => ::Thrift::Types::STRING, :name => 'uuid', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @status.nil? || ::CadenceThrift::DomainStatus::VALID_VALUES.include?(@status)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field status!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DomainConfiguration
    include ::Thrift::Struct, ::Thrift::Struct_Union
    WORKFLOWEXECUTIONRETENTIONPERIODINDAYS = 10
    EMITMETRIC = 20
    BADBINARIES = 70
    HISTORYARCHIVALSTATUS = 80
    HISTORYARCHIVALURI = 90
    VISIBILITYARCHIVALSTATUS = 100
    VISIBILITYARCHIVALURI = 110

    FIELDS = {
      WORKFLOWEXECUTIONRETENTIONPERIODINDAYS => {:type => ::Thrift::Types::I32, :name => 'workflowExecutionRetentionPeriodInDays', :optional => true},
      EMITMETRIC => {:type => ::Thrift::Types::BOOL, :name => 'emitMetric', :optional => true},
      BADBINARIES => {:type => ::Thrift::Types::STRUCT, :name => 'badBinaries', :class => ::CadenceThrift::BadBinaries, :optional => true},
      HISTORYARCHIVALSTATUS => {:type => ::Thrift::Types::I32, :name => 'historyArchivalStatus', :optional => true, :enum_class => ::CadenceThrift::ArchivalStatus},
      HISTORYARCHIVALURI => {:type => ::Thrift::Types::STRING, :name => 'historyArchivalURI', :optional => true},
      VISIBILITYARCHIVALSTATUS => {:type => ::Thrift::Types::I32, :name => 'visibilityArchivalStatus', :optional => true, :enum_class => ::CadenceThrift::ArchivalStatus},
      VISIBILITYARCHIVALURI => {:type => ::Thrift::Types::STRING, :name => 'visibilityArchivalURI', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @historyArchivalStatus.nil? || ::CadenceThrift::ArchivalStatus::VALID_VALUES.include?(@historyArchivalStatus)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field historyArchivalStatus!')
      end
      unless @visibilityArchivalStatus.nil? || ::CadenceThrift::ArchivalStatus::VALID_VALUES.include?(@visibilityArchivalStatus)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field visibilityArchivalStatus!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class BadBinaries
    include ::Thrift::Struct, ::Thrift::Struct_Union
    BINARIES = 10

    FIELDS = {
      BINARIES => {:type => ::Thrift::Types::MAP, :name => 'binaries', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::BadBinaryInfo}, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class BadBinaryInfo
    include ::Thrift::Struct, ::Thrift::Struct_Union
    REASON = 10
    OPERATOR = 20
    CREATEDTIMENANO = 30

    FIELDS = {
      REASON => {:type => ::Thrift::Types::STRING, :name => 'reason', :optional => true},
      OPERATOR => {:type => ::Thrift::Types::STRING, :name => 'operator', :optional => true},
      CREATEDTIMENANO => {:type => ::Thrift::Types::I64, :name => 'createdTimeNano', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class UpdateDomainInfo
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DESCRIPTION = 10
    OWNEREMAIL = 20
    DATA = 30

    FIELDS = {
      DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description', :optional => true},
      OWNEREMAIL => {:type => ::Thrift::Types::STRING, :name => 'ownerEmail', :optional => true},
      DATA => {:type => ::Thrift::Types::MAP, :name => 'data', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ClusterReplicationConfiguration
    include ::Thrift::Struct, ::Thrift::Struct_Union
    CLUSTERNAME = 10

    FIELDS = {
      CLUSTERNAME => {:type => ::Thrift::Types::STRING, :name => 'clusterName', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DomainReplicationConfiguration
    include ::Thrift::Struct, ::Thrift::Struct_Union
    ACTIVECLUSTERNAME = 10
    CLUSTERS = 20

    FIELDS = {
      ACTIVECLUSTERNAME => {:type => ::Thrift::Types::STRING, :name => 'activeClusterName', :optional => true},
      CLUSTERS => {:type => ::Thrift::Types::LIST, :name => 'clusters', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::ClusterReplicationConfiguration}, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RegisterDomainRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NAME = 10
    DESCRIPTION = 20
    OWNEREMAIL = 30
    WORKFLOWEXECUTIONRETENTIONPERIODINDAYS = 40
    EMITMETRIC = 50
    CLUSTERS = 60
    ACTIVECLUSTERNAME = 70
    DATA = 80
    SECURITYTOKEN = 90
    ISGLOBALDOMAIN = 120
    HISTORYARCHIVALSTATUS = 130
    HISTORYARCHIVALURI = 140
    VISIBILITYARCHIVALSTATUS = 150
    VISIBILITYARCHIVALURI = 160

    FIELDS = {
      NAME => {:type => ::Thrift::Types::STRING, :name => 'name', :optional => true},
      DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description', :optional => true},
      OWNEREMAIL => {:type => ::Thrift::Types::STRING, :name => 'ownerEmail', :optional => true},
      WORKFLOWEXECUTIONRETENTIONPERIODINDAYS => {:type => ::Thrift::Types::I32, :name => 'workflowExecutionRetentionPeriodInDays', :optional => true},
      EMITMETRIC => {:type => ::Thrift::Types::BOOL, :name => 'emitMetric', :optional => true},
      CLUSTERS => {:type => ::Thrift::Types::LIST, :name => 'clusters', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::ClusterReplicationConfiguration}, :optional => true},
      ACTIVECLUSTERNAME => {:type => ::Thrift::Types::STRING, :name => 'activeClusterName', :optional => true},
      DATA => {:type => ::Thrift::Types::MAP, :name => 'data', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}, :optional => true},
      SECURITYTOKEN => {:type => ::Thrift::Types::STRING, :name => 'securityToken', :optional => true},
      ISGLOBALDOMAIN => {:type => ::Thrift::Types::BOOL, :name => 'isGlobalDomain', :optional => true},
      HISTORYARCHIVALSTATUS => {:type => ::Thrift::Types::I32, :name => 'historyArchivalStatus', :optional => true, :enum_class => ::CadenceThrift::ArchivalStatus},
      HISTORYARCHIVALURI => {:type => ::Thrift::Types::STRING, :name => 'historyArchivalURI', :optional => true},
      VISIBILITYARCHIVALSTATUS => {:type => ::Thrift::Types::I32, :name => 'visibilityArchivalStatus', :optional => true, :enum_class => ::CadenceThrift::ArchivalStatus},
      VISIBILITYARCHIVALURI => {:type => ::Thrift::Types::STRING, :name => 'visibilityArchivalURI', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @historyArchivalStatus.nil? || ::CadenceThrift::ArchivalStatus::VALID_VALUES.include?(@historyArchivalStatus)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field historyArchivalStatus!')
      end
      unless @visibilityArchivalStatus.nil? || ::CadenceThrift::ArchivalStatus::VALID_VALUES.include?(@visibilityArchivalStatus)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field visibilityArchivalStatus!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ListDomainsRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    PAGESIZE = 10
    NEXTPAGETOKEN = 20

    FIELDS = {
      PAGESIZE => {:type => ::Thrift::Types::I32, :name => 'pageSize', :optional => true},
      NEXTPAGETOKEN => {:type => ::Thrift::Types::STRING, :name => 'nextPageToken', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ListDomainsResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAINS = 10
    NEXTPAGETOKEN = 20

    FIELDS = {
      DOMAINS => {:type => ::Thrift::Types::LIST, :name => 'domains', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::DescribeDomainResponse}, :optional => true},
      NEXTPAGETOKEN => {:type => ::Thrift::Types::STRING, :name => 'nextPageToken', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DescribeDomainRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NAME = 10
    UUID = 20

    FIELDS = {
      NAME => {:type => ::Thrift::Types::STRING, :name => 'name', :optional => true},
      UUID => {:type => ::Thrift::Types::STRING, :name => 'uuid', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DescribeDomainResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAININFO = 10
    CONFIGURATION = 20
    REPLICATIONCONFIGURATION = 30
    FAILOVERVERSION = 40
    ISGLOBALDOMAIN = 50

    FIELDS = {
      DOMAININFO => {:type => ::Thrift::Types::STRUCT, :name => 'domainInfo', :class => ::CadenceThrift::DomainInfo, :optional => true},
      CONFIGURATION => {:type => ::Thrift::Types::STRUCT, :name => 'configuration', :class => ::CadenceThrift::DomainConfiguration, :optional => true},
      REPLICATIONCONFIGURATION => {:type => ::Thrift::Types::STRUCT, :name => 'replicationConfiguration', :class => ::CadenceThrift::DomainReplicationConfiguration, :optional => true},
      FAILOVERVERSION => {:type => ::Thrift::Types::I64, :name => 'failoverVersion', :optional => true},
      ISGLOBALDOMAIN => {:type => ::Thrift::Types::BOOL, :name => 'isGlobalDomain', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class UpdateDomainRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NAME = 10
    UPDATEDINFO = 20
    CONFIGURATION = 30
    REPLICATIONCONFIGURATION = 40
    SECURITYTOKEN = 50
    DELETEBADBINARY = 60

    FIELDS = {
      NAME => {:type => ::Thrift::Types::STRING, :name => 'name', :optional => true},
      UPDATEDINFO => {:type => ::Thrift::Types::STRUCT, :name => 'updatedInfo', :class => ::CadenceThrift::UpdateDomainInfo, :optional => true},
      CONFIGURATION => {:type => ::Thrift::Types::STRUCT, :name => 'configuration', :class => ::CadenceThrift::DomainConfiguration, :optional => true},
      REPLICATIONCONFIGURATION => {:type => ::Thrift::Types::STRUCT, :name => 'replicationConfiguration', :class => ::CadenceThrift::DomainReplicationConfiguration, :optional => true},
      SECURITYTOKEN => {:type => ::Thrift::Types::STRING, :name => 'securityToken', :optional => true},
      DELETEBADBINARY => {:type => ::Thrift::Types::STRING, :name => 'deleteBadBinary', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class UpdateDomainResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAININFO = 10
    CONFIGURATION = 20
    REPLICATIONCONFIGURATION = 30
    FAILOVERVERSION = 40
    ISGLOBALDOMAIN = 50

    FIELDS = {
      DOMAININFO => {:type => ::Thrift::Types::STRUCT, :name => 'domainInfo', :class => ::CadenceThrift::DomainInfo, :optional => true},
      CONFIGURATION => {:type => ::Thrift::Types::STRUCT, :name => 'configuration', :class => ::CadenceThrift::DomainConfiguration, :optional => true},
      REPLICATIONCONFIGURATION => {:type => ::Thrift::Types::STRUCT, :name => 'replicationConfiguration', :class => ::CadenceThrift::DomainReplicationConfiguration, :optional => true},
      FAILOVERVERSION => {:type => ::Thrift::Types::I64, :name => 'failoverVersion', :optional => true},
      ISGLOBALDOMAIN => {:type => ::Thrift::Types::BOOL, :name => 'isGlobalDomain', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DeprecateDomainRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NAME = 10
    SECURITYTOKEN = 20

    FIELDS = {
      NAME => {:type => ::Thrift::Types::STRING, :name => 'name', :optional => true},
      SECURITYTOKEN => {:type => ::Thrift::Types::STRING, :name => 'securityToken', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class StartWorkflowExecutionRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    WORKFLOWID = 20
    WORKFLOWTYPE = 30
    TASKLIST = 40
    INPUT = 50
    EXECUTIONSTARTTOCLOSETIMEOUTSECONDS = 60
    TASKSTARTTOCLOSETIMEOUTSECONDS = 70
    IDENTITY = 80
    REQUESTID = 90
    WORKFLOWIDREUSEPOLICY = 100
    RETRYPOLICY = 120
    CRONSCHEDULE = 130
    MEMO = 140
    SEARCHATTRIBUTES = 141
    HEADER = 150

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWID => {:type => ::Thrift::Types::STRING, :name => 'workflowId', :optional => true},
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      TASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'taskList', :class => ::CadenceThrift::TaskList, :optional => true},
      INPUT => {:type => ::Thrift::Types::STRING, :name => 'input', :binary => true, :optional => true},
      EXECUTIONSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'executionStartToCloseTimeoutSeconds', :optional => true},
      TASKSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'taskStartToCloseTimeoutSeconds', :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true},
      REQUESTID => {:type => ::Thrift::Types::STRING, :name => 'requestId', :optional => true},
      WORKFLOWIDREUSEPOLICY => {:type => ::Thrift::Types::I32, :name => 'workflowIdReusePolicy', :optional => true, :enum_class => ::CadenceThrift::WorkflowIdReusePolicy},
      RETRYPOLICY => {:type => ::Thrift::Types::STRUCT, :name => 'retryPolicy', :class => ::CadenceThrift::RetryPolicy, :optional => true},
      CRONSCHEDULE => {:type => ::Thrift::Types::STRING, :name => 'cronSchedule', :optional => true},
      MEMO => {:type => ::Thrift::Types::STRUCT, :name => 'memo', :class => ::CadenceThrift::Memo, :optional => true},
      SEARCHATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'searchAttributes', :class => ::CadenceThrift::SearchAttributes, :optional => true},
      HEADER => {:type => ::Thrift::Types::STRUCT, :name => 'header', :class => ::CadenceThrift::Header, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @workflowIdReusePolicy.nil? || ::CadenceThrift::WorkflowIdReusePolicy::VALID_VALUES.include?(@workflowIdReusePolicy)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field workflowIdReusePolicy!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class StartWorkflowExecutionResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    RUNID = 10

    FIELDS = {
      RUNID => {:type => ::Thrift::Types::STRING, :name => 'runId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class PollForDecisionTaskRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    TASKLIST = 20
    IDENTITY = 30
    BINARYCHECKSUM = 40

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      TASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'taskList', :class => ::CadenceThrift::TaskList, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true},
      BINARYCHECKSUM => {:type => ::Thrift::Types::STRING, :name => 'binaryChecksum', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class PollForDecisionTaskResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TASKTOKEN = 10
    WORKFLOWEXECUTION = 20
    WORKFLOWTYPE = 30
    PREVIOUSSTARTEDEVENTID = 40
    STARTEDEVENTID = 50
    ATTEMPT = 51
    BACKLOGCOUNTHINT = 54
    HISTORY = 60
    NEXTPAGETOKEN = 70
    QUERY = 80
    WORKFLOWEXECUTIONTASKLIST = 90
    SCHEDULEDTIMESTAMP = 100
    STARTEDTIMESTAMP = 110
    QUERIES = 120

    FIELDS = {
      TASKTOKEN => {:type => ::Thrift::Types::STRING, :name => 'taskToken', :binary => true, :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      PREVIOUSSTARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'previousStartedEventId', :optional => true},
      STARTEDEVENTID => {:type => ::Thrift::Types::I64, :name => 'startedEventId', :optional => true},
      ATTEMPT => {:type => ::Thrift::Types::I64, :name => 'attempt', :optional => true},
      BACKLOGCOUNTHINT => {:type => ::Thrift::Types::I64, :name => 'backlogCountHint', :optional => true},
      HISTORY => {:type => ::Thrift::Types::STRUCT, :name => 'history', :class => ::CadenceThrift::History, :optional => true},
      NEXTPAGETOKEN => {:type => ::Thrift::Types::STRING, :name => 'nextPageToken', :binary => true, :optional => true},
      QUERY => {:type => ::Thrift::Types::STRUCT, :name => 'query', :class => ::CadenceThrift::WorkflowQuery, :optional => true},
      WORKFLOWEXECUTIONTASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'WorkflowExecutionTaskList', :class => ::CadenceThrift::TaskList, :optional => true},
      SCHEDULEDTIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'scheduledTimestamp', :optional => true},
      STARTEDTIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'startedTimestamp', :optional => true},
      QUERIES => {:type => ::Thrift::Types::LIST, :name => 'queries', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::WorkflowQuery}, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class StickyExecutionAttributes
    include ::Thrift::Struct, ::Thrift::Struct_Union
    WORKERTASKLIST = 10
    SCHEDULETOSTARTTIMEOUTSECONDS = 20

    FIELDS = {
      WORKERTASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'workerTaskList', :class => ::CadenceThrift::TaskList, :optional => true},
      SCHEDULETOSTARTTIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'scheduleToStartTimeoutSeconds', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RespondDecisionTaskCompletedRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TASKTOKEN = 10
    DECISIONS = 20
    EXECUTIONCONTEXT = 30
    IDENTITY = 40
    STICKYATTRIBUTES = 50
    RETURNNEWDECISIONTASK = 60
    FORCECREATENEWDECISIONTASK = 70
    BINARYCHECKSUM = 80
    QUERYRESULTS = 90

    FIELDS = {
      TASKTOKEN => {:type => ::Thrift::Types::STRING, :name => 'taskToken', :binary => true, :optional => true},
      DECISIONS => {:type => ::Thrift::Types::LIST, :name => 'decisions', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::Decision}, :optional => true},
      EXECUTIONCONTEXT => {:type => ::Thrift::Types::STRING, :name => 'executionContext', :binary => true, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true},
      STICKYATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'stickyAttributes', :class => ::CadenceThrift::StickyExecutionAttributes, :optional => true},
      RETURNNEWDECISIONTASK => {:type => ::Thrift::Types::BOOL, :name => 'returnNewDecisionTask', :optional => true},
      FORCECREATENEWDECISIONTASK => {:type => ::Thrift::Types::BOOL, :name => 'forceCreateNewDecisionTask', :optional => true},
      BINARYCHECKSUM => {:type => ::Thrift::Types::STRING, :name => 'binaryChecksum', :optional => true},
      QUERYRESULTS => {:type => ::Thrift::Types::LIST, :name => 'queryResults', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::WorkflowQueryResult}, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RespondDecisionTaskCompletedResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DECISIONTASK = 10

    FIELDS = {
      DECISIONTASK => {:type => ::Thrift::Types::STRUCT, :name => 'decisionTask', :class => ::CadenceThrift::PollForDecisionTaskResponse, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RespondDecisionTaskFailedRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TASKTOKEN = 10
    CAUSE = 20
    DETAILS = 30
    IDENTITY = 40

    FIELDS = {
      TASKTOKEN => {:type => ::Thrift::Types::STRING, :name => 'taskToken', :binary => true, :optional => true},
      CAUSE => {:type => ::Thrift::Types::I32, :name => 'cause', :optional => true, :enum_class => ::CadenceThrift::DecisionTaskFailedCause},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @cause.nil? || ::CadenceThrift::DecisionTaskFailedCause::VALID_VALUES.include?(@cause)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field cause!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class PollForActivityTaskRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    TASKLIST = 20
    IDENTITY = 30
    TASKLISTMETADATA = 40

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      TASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'taskList', :class => ::CadenceThrift::TaskList, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true},
      TASKLISTMETADATA => {:type => ::Thrift::Types::STRUCT, :name => 'taskListMetadata', :class => ::CadenceThrift::TaskListMetadata, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class PollForActivityTaskResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TASKTOKEN = 10
    WORKFLOWEXECUTION = 20
    ACTIVITYID = 30
    ACTIVITYTYPE = 40
    INPUT = 50
    SCHEDULEDTIMESTAMP = 70
    SCHEDULETOCLOSETIMEOUTSECONDS = 80
    STARTEDTIMESTAMP = 90
    STARTTOCLOSETIMEOUTSECONDS = 100
    HEARTBEATTIMEOUTSECONDS = 110
    ATTEMPT = 120
    SCHEDULEDTIMESTAMPOFTHISATTEMPT = 130
    HEARTBEATDETAILS = 140
    WORKFLOWTYPE = 150
    WORKFLOWDOMAIN = 160
    HEADER = 170

    FIELDS = {
      TASKTOKEN => {:type => ::Thrift::Types::STRING, :name => 'taskToken', :binary => true, :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      ACTIVITYID => {:type => ::Thrift::Types::STRING, :name => 'activityId', :optional => true},
      ACTIVITYTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'activityType', :class => ::CadenceThrift::ActivityType, :optional => true},
      INPUT => {:type => ::Thrift::Types::STRING, :name => 'input', :binary => true, :optional => true},
      SCHEDULEDTIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'scheduledTimestamp', :optional => true},
      SCHEDULETOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'scheduleToCloseTimeoutSeconds', :optional => true},
      STARTEDTIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'startedTimestamp', :optional => true},
      STARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'startToCloseTimeoutSeconds', :optional => true},
      HEARTBEATTIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'heartbeatTimeoutSeconds', :optional => true},
      ATTEMPT => {:type => ::Thrift::Types::I32, :name => 'attempt', :optional => true},
      SCHEDULEDTIMESTAMPOFTHISATTEMPT => {:type => ::Thrift::Types::I64, :name => 'scheduledTimestampOfThisAttempt', :optional => true},
      HEARTBEATDETAILS => {:type => ::Thrift::Types::STRING, :name => 'heartbeatDetails', :binary => true, :optional => true},
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      WORKFLOWDOMAIN => {:type => ::Thrift::Types::STRING, :name => 'workflowDomain', :optional => true},
      HEADER => {:type => ::Thrift::Types::STRUCT, :name => 'header', :class => ::CadenceThrift::Header, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RecordActivityTaskHeartbeatRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TASKTOKEN = 10
    DETAILS = 20
    IDENTITY = 30

    FIELDS = {
      TASKTOKEN => {:type => ::Thrift::Types::STRING, :name => 'taskToken', :binary => true, :optional => true},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RecordActivityTaskHeartbeatByIDRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    WORKFLOWID = 20
    RUNID = 30
    ACTIVITYID = 40
    DETAILS = 50
    IDENTITY = 60

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWID => {:type => ::Thrift::Types::STRING, :name => 'workflowID', :optional => true},
      RUNID => {:type => ::Thrift::Types::STRING, :name => 'runID', :optional => true},
      ACTIVITYID => {:type => ::Thrift::Types::STRING, :name => 'activityID', :optional => true},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RecordActivityTaskHeartbeatResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    CANCELREQUESTED = 10

    FIELDS = {
      CANCELREQUESTED => {:type => ::Thrift::Types::BOOL, :name => 'cancelRequested', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RespondActivityTaskCompletedRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TASKTOKEN = 10
    RESULT = 20
    IDENTITY = 30

    FIELDS = {
      TASKTOKEN => {:type => ::Thrift::Types::STRING, :name => 'taskToken', :binary => true, :optional => true},
      RESULT => {:type => ::Thrift::Types::STRING, :name => 'result', :binary => true, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RespondActivityTaskFailedRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TASKTOKEN = 10
    REASON = 20
    DETAILS = 30
    IDENTITY = 40

    FIELDS = {
      TASKTOKEN => {:type => ::Thrift::Types::STRING, :name => 'taskToken', :binary => true, :optional => true},
      REASON => {:type => ::Thrift::Types::STRING, :name => 'reason', :optional => true},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RespondActivityTaskCanceledRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TASKTOKEN = 10
    DETAILS = 20
    IDENTITY = 30

    FIELDS = {
      TASKTOKEN => {:type => ::Thrift::Types::STRING, :name => 'taskToken', :binary => true, :optional => true},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RespondActivityTaskCompletedByIDRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    WORKFLOWID = 20
    RUNID = 30
    ACTIVITYID = 40
    RESULT = 50
    IDENTITY = 60

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWID => {:type => ::Thrift::Types::STRING, :name => 'workflowID', :optional => true},
      RUNID => {:type => ::Thrift::Types::STRING, :name => 'runID', :optional => true},
      ACTIVITYID => {:type => ::Thrift::Types::STRING, :name => 'activityID', :optional => true},
      RESULT => {:type => ::Thrift::Types::STRING, :name => 'result', :binary => true, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RespondActivityTaskFailedByIDRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    WORKFLOWID = 20
    RUNID = 30
    ACTIVITYID = 40
    REASON = 50
    DETAILS = 60
    IDENTITY = 70

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWID => {:type => ::Thrift::Types::STRING, :name => 'workflowID', :optional => true},
      RUNID => {:type => ::Thrift::Types::STRING, :name => 'runID', :optional => true},
      ACTIVITYID => {:type => ::Thrift::Types::STRING, :name => 'activityID', :optional => true},
      REASON => {:type => ::Thrift::Types::STRING, :name => 'reason', :optional => true},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RespondActivityTaskCanceledByIDRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    WORKFLOWID = 20
    RUNID = 30
    ACTIVITYID = 40
    DETAILS = 50
    IDENTITY = 60

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWID => {:type => ::Thrift::Types::STRING, :name => 'workflowID', :optional => true},
      RUNID => {:type => ::Thrift::Types::STRING, :name => 'runID', :optional => true},
      ACTIVITYID => {:type => ::Thrift::Types::STRING, :name => 'activityID', :optional => true},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RequestCancelWorkflowExecutionRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    WORKFLOWEXECUTION = 20
    IDENTITY = 30
    REQUESTID = 40

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true},
      REQUESTID => {:type => ::Thrift::Types::STRING, :name => 'requestId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class GetWorkflowExecutionHistoryRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    EXECUTION = 20
    MAXIMUMPAGESIZE = 30
    NEXTPAGETOKEN = 40
    WAITFORNEWEVENT = 50
    HISTORYEVENTFILTERTYPE = 60

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      EXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'execution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      MAXIMUMPAGESIZE => {:type => ::Thrift::Types::I32, :name => 'maximumPageSize', :optional => true},
      NEXTPAGETOKEN => {:type => ::Thrift::Types::STRING, :name => 'nextPageToken', :binary => true, :optional => true},
      WAITFORNEWEVENT => {:type => ::Thrift::Types::BOOL, :name => 'waitForNewEvent', :optional => true},
      HISTORYEVENTFILTERTYPE => {:type => ::Thrift::Types::I32, :name => 'HistoryEventFilterType', :optional => true, :enum_class => ::CadenceThrift::HistoryEventFilterType}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @HistoryEventFilterType.nil? || ::CadenceThrift::HistoryEventFilterType::VALID_VALUES.include?(@HistoryEventFilterType)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field HistoryEventFilterType!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class GetWorkflowExecutionHistoryResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    HISTORY = 10
    NEXTPAGETOKEN = 20
    ARCHIVED = 30

    FIELDS = {
      HISTORY => {:type => ::Thrift::Types::STRUCT, :name => 'history', :class => ::CadenceThrift::History, :optional => true},
      NEXTPAGETOKEN => {:type => ::Thrift::Types::STRING, :name => 'nextPageToken', :binary => true, :optional => true},
      ARCHIVED => {:type => ::Thrift::Types::BOOL, :name => 'archived', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class SignalWorkflowExecutionRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    WORKFLOWEXECUTION = 20
    SIGNALNAME = 30
    INPUT = 40
    IDENTITY = 50
    REQUESTID = 60
    CONTROL = 70

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      SIGNALNAME => {:type => ::Thrift::Types::STRING, :name => 'signalName', :optional => true},
      INPUT => {:type => ::Thrift::Types::STRING, :name => 'input', :binary => true, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true},
      REQUESTID => {:type => ::Thrift::Types::STRING, :name => 'requestId', :optional => true},
      CONTROL => {:type => ::Thrift::Types::STRING, :name => 'control', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class SignalWithStartWorkflowExecutionRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    WORKFLOWID = 20
    WORKFLOWTYPE = 30
    TASKLIST = 40
    INPUT = 50
    EXECUTIONSTARTTOCLOSETIMEOUTSECONDS = 60
    TASKSTARTTOCLOSETIMEOUTSECONDS = 70
    IDENTITY = 80
    REQUESTID = 90
    WORKFLOWIDREUSEPOLICY = 100
    SIGNALNAME = 110
    SIGNALINPUT = 120
    CONTROL = 130
    RETRYPOLICY = 140
    CRONSCHEDULE = 150
    MEMO = 160
    SEARCHATTRIBUTES = 161
    HEADER = 170

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWID => {:type => ::Thrift::Types::STRING, :name => 'workflowId', :optional => true},
      WORKFLOWTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'workflowType', :class => ::CadenceThrift::WorkflowType, :optional => true},
      TASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'taskList', :class => ::CadenceThrift::TaskList, :optional => true},
      INPUT => {:type => ::Thrift::Types::STRING, :name => 'input', :binary => true, :optional => true},
      EXECUTIONSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'executionStartToCloseTimeoutSeconds', :optional => true},
      TASKSTARTTOCLOSETIMEOUTSECONDS => {:type => ::Thrift::Types::I32, :name => 'taskStartToCloseTimeoutSeconds', :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true},
      REQUESTID => {:type => ::Thrift::Types::STRING, :name => 'requestId', :optional => true},
      WORKFLOWIDREUSEPOLICY => {:type => ::Thrift::Types::I32, :name => 'workflowIdReusePolicy', :optional => true, :enum_class => ::CadenceThrift::WorkflowIdReusePolicy},
      SIGNALNAME => {:type => ::Thrift::Types::STRING, :name => 'signalName', :optional => true},
      SIGNALINPUT => {:type => ::Thrift::Types::STRING, :name => 'signalInput', :binary => true, :optional => true},
      CONTROL => {:type => ::Thrift::Types::STRING, :name => 'control', :binary => true, :optional => true},
      RETRYPOLICY => {:type => ::Thrift::Types::STRUCT, :name => 'retryPolicy', :class => ::CadenceThrift::RetryPolicy, :optional => true},
      CRONSCHEDULE => {:type => ::Thrift::Types::STRING, :name => 'cronSchedule', :optional => true},
      MEMO => {:type => ::Thrift::Types::STRUCT, :name => 'memo', :class => ::CadenceThrift::Memo, :optional => true},
      SEARCHATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'searchAttributes', :class => ::CadenceThrift::SearchAttributes, :optional => true},
      HEADER => {:type => ::Thrift::Types::STRUCT, :name => 'header', :class => ::CadenceThrift::Header, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @workflowIdReusePolicy.nil? || ::CadenceThrift::WorkflowIdReusePolicy::VALID_VALUES.include?(@workflowIdReusePolicy)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field workflowIdReusePolicy!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class TerminateWorkflowExecutionRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    WORKFLOWEXECUTION = 20
    REASON = 30
    DETAILS = 40
    IDENTITY = 50

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      REASON => {:type => ::Thrift::Types::STRING, :name => 'reason', :optional => true},
      DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :binary => true, :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ResetWorkflowExecutionRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    WORKFLOWEXECUTION = 20
    REASON = 30
    DECISIONFINISHEVENTID = 40
    REQUESTID = 50

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      WORKFLOWEXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      REASON => {:type => ::Thrift::Types::STRING, :name => 'reason', :optional => true},
      DECISIONFINISHEVENTID => {:type => ::Thrift::Types::I64, :name => 'decisionFinishEventId', :optional => true},
      REQUESTID => {:type => ::Thrift::Types::STRING, :name => 'requestId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ResetWorkflowExecutionResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    RUNID = 10

    FIELDS = {
      RUNID => {:type => ::Thrift::Types::STRING, :name => 'runId', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ListOpenWorkflowExecutionsRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    MAXIMUMPAGESIZE = 20
    NEXTPAGETOKEN = 30
    STARTTIMEFILTER = 40
    EXECUTIONFILTER = 50
    TYPEFILTER = 60

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      MAXIMUMPAGESIZE => {:type => ::Thrift::Types::I32, :name => 'maximumPageSize', :optional => true},
      NEXTPAGETOKEN => {:type => ::Thrift::Types::STRING, :name => 'nextPageToken', :binary => true, :optional => true},
      STARTTIMEFILTER => {:type => ::Thrift::Types::STRUCT, :name => 'StartTimeFilter', :class => ::CadenceThrift::StartTimeFilter, :optional => true},
      EXECUTIONFILTER => {:type => ::Thrift::Types::STRUCT, :name => 'executionFilter', :class => ::CadenceThrift::WorkflowExecutionFilter, :optional => true},
      TYPEFILTER => {:type => ::Thrift::Types::STRUCT, :name => 'typeFilter', :class => ::CadenceThrift::WorkflowTypeFilter, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ListOpenWorkflowExecutionsResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    EXECUTIONS = 10
    NEXTPAGETOKEN = 20

    FIELDS = {
      EXECUTIONS => {:type => ::Thrift::Types::LIST, :name => 'executions', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::WorkflowExecutionInfo}, :optional => true},
      NEXTPAGETOKEN => {:type => ::Thrift::Types::STRING, :name => 'nextPageToken', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ListClosedWorkflowExecutionsRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    MAXIMUMPAGESIZE = 20
    NEXTPAGETOKEN = 30
    STARTTIMEFILTER = 40
    EXECUTIONFILTER = 50
    TYPEFILTER = 60
    STATUSFILTER = 70

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      MAXIMUMPAGESIZE => {:type => ::Thrift::Types::I32, :name => 'maximumPageSize', :optional => true},
      NEXTPAGETOKEN => {:type => ::Thrift::Types::STRING, :name => 'nextPageToken', :binary => true, :optional => true},
      STARTTIMEFILTER => {:type => ::Thrift::Types::STRUCT, :name => 'StartTimeFilter', :class => ::CadenceThrift::StartTimeFilter, :optional => true},
      EXECUTIONFILTER => {:type => ::Thrift::Types::STRUCT, :name => 'executionFilter', :class => ::CadenceThrift::WorkflowExecutionFilter, :optional => true},
      TYPEFILTER => {:type => ::Thrift::Types::STRUCT, :name => 'typeFilter', :class => ::CadenceThrift::WorkflowTypeFilter, :optional => true},
      STATUSFILTER => {:type => ::Thrift::Types::I32, :name => 'statusFilter', :optional => true, :enum_class => ::CadenceThrift::WorkflowExecutionCloseStatus}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @statusFilter.nil? || ::CadenceThrift::WorkflowExecutionCloseStatus::VALID_VALUES.include?(@statusFilter)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field statusFilter!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ListClosedWorkflowExecutionsResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    EXECUTIONS = 10
    NEXTPAGETOKEN = 20

    FIELDS = {
      EXECUTIONS => {:type => ::Thrift::Types::LIST, :name => 'executions', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::WorkflowExecutionInfo}, :optional => true},
      NEXTPAGETOKEN => {:type => ::Thrift::Types::STRING, :name => 'nextPageToken', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ListWorkflowExecutionsRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    PAGESIZE = 20
    NEXTPAGETOKEN = 30
    QUERY = 40

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      PAGESIZE => {:type => ::Thrift::Types::I32, :name => 'pageSize', :optional => true},
      NEXTPAGETOKEN => {:type => ::Thrift::Types::STRING, :name => 'nextPageToken', :binary => true, :optional => true},
      QUERY => {:type => ::Thrift::Types::STRING, :name => 'query', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ListWorkflowExecutionsResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    EXECUTIONS = 10
    NEXTPAGETOKEN = 20

    FIELDS = {
      EXECUTIONS => {:type => ::Thrift::Types::LIST, :name => 'executions', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::WorkflowExecutionInfo}, :optional => true},
      NEXTPAGETOKEN => {:type => ::Thrift::Types::STRING, :name => 'nextPageToken', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ListArchivedWorkflowExecutionsRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    PAGESIZE = 20
    NEXTPAGETOKEN = 30
    QUERY = 40

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      PAGESIZE => {:type => ::Thrift::Types::I32, :name => 'pageSize', :optional => true},
      NEXTPAGETOKEN => {:type => ::Thrift::Types::STRING, :name => 'nextPageToken', :binary => true, :optional => true},
      QUERY => {:type => ::Thrift::Types::STRING, :name => 'query', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ListArchivedWorkflowExecutionsResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    EXECUTIONS = 10
    NEXTPAGETOKEN = 20

    FIELDS = {
      EXECUTIONS => {:type => ::Thrift::Types::LIST, :name => 'executions', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::WorkflowExecutionInfo}, :optional => true},
      NEXTPAGETOKEN => {:type => ::Thrift::Types::STRING, :name => 'nextPageToken', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class CountWorkflowExecutionsRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    QUERY = 20

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      QUERY => {:type => ::Thrift::Types::STRING, :name => 'query', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class CountWorkflowExecutionsResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    COUNT = 10

    FIELDS = {
      COUNT => {:type => ::Thrift::Types::I64, :name => 'count', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class GetSearchAttributesResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    KEYS = 10

    FIELDS = {
      KEYS => {:type => ::Thrift::Types::MAP, :name => 'keys', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::I32, :enum_class => ::CadenceThrift::IndexedValueType}, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class QueryWorkflowRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    EXECUTION = 20
    QUERY = 30
    QUERYREJECTCONDITION = 40

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      EXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'execution', :class => ::CadenceThrift::WorkflowExecution, :optional => true},
      QUERY => {:type => ::Thrift::Types::STRUCT, :name => 'query', :class => ::CadenceThrift::WorkflowQuery, :optional => true},
      QUERYREJECTCONDITION => {:type => ::Thrift::Types::I32, :name => 'queryRejectCondition', :optional => true, :enum_class => ::CadenceThrift::QueryRejectCondition}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @queryRejectCondition.nil? || ::CadenceThrift::QueryRejectCondition::VALID_VALUES.include?(@queryRejectCondition)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field queryRejectCondition!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class QueryRejected
    include ::Thrift::Struct, ::Thrift::Struct_Union
    CLOSESTATUS = 10

    FIELDS = {
      CLOSESTATUS => {:type => ::Thrift::Types::I32, :name => 'closeStatus', :optional => true, :enum_class => ::CadenceThrift::WorkflowExecutionCloseStatus}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @closeStatus.nil? || ::CadenceThrift::WorkflowExecutionCloseStatus::VALID_VALUES.include?(@closeStatus)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field closeStatus!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class QueryWorkflowResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    QUERYRESULT = 10
    QUERYREJECTED = 20

    FIELDS = {
      QUERYRESULT => {:type => ::Thrift::Types::STRING, :name => 'queryResult', :binary => true, :optional => true},
      QUERYREJECTED => {:type => ::Thrift::Types::STRUCT, :name => 'queryRejected', :class => ::CadenceThrift::QueryRejected, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowQuery
    include ::Thrift::Struct, ::Thrift::Struct_Union
    QUERYTYPE = 10
    QUERYARGS = 20

    FIELDS = {
      QUERYTYPE => {:type => ::Thrift::Types::STRING, :name => 'queryType', :optional => true},
      QUERYARGS => {:type => ::Thrift::Types::STRING, :name => 'queryArgs', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ResetStickyTaskListRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    EXECUTION = 20

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      EXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'execution', :class => ::CadenceThrift::WorkflowExecution, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ResetStickyTaskListResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RespondQueryTaskCompletedRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TASKTOKEN = 10
    COMPLETEDTYPE = 20
    QUERYRESULT = 30
    ERRORMESSAGE = 40

    FIELDS = {
      TASKTOKEN => {:type => ::Thrift::Types::STRING, :name => 'taskToken', :binary => true, :optional => true},
      COMPLETEDTYPE => {:type => ::Thrift::Types::I32, :name => 'completedType', :optional => true, :enum_class => ::CadenceThrift::QueryTaskCompletedType},
      QUERYRESULT => {:type => ::Thrift::Types::STRING, :name => 'queryResult', :binary => true, :optional => true},
      ERRORMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'errorMessage', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @completedType.nil? || ::CadenceThrift::QueryTaskCompletedType::VALID_VALUES.include?(@completedType)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field completedType!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class WorkflowQueryResult
    include ::Thrift::Struct, ::Thrift::Struct_Union
    RESULTTYPE = 10
    ANSWER = 20
    ERRORREASON = 30
    ERRORDETAILS = 40

    FIELDS = {
      RESULTTYPE => {:type => ::Thrift::Types::I32, :name => 'resultType', :optional => true, :enum_class => ::CadenceThrift::QueryResultType},
      ANSWER => {:type => ::Thrift::Types::STRING, :name => 'answer', :binary => true, :optional => true},
      ERRORREASON => {:type => ::Thrift::Types::STRING, :name => 'errorReason', :optional => true},
      ERRORDETAILS => {:type => ::Thrift::Types::STRING, :name => 'errorDetails', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @resultType.nil? || ::CadenceThrift::QueryResultType::VALID_VALUES.include?(@resultType)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field resultType!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DescribeWorkflowExecutionRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    EXECUTION = 20

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      EXECUTION => {:type => ::Thrift::Types::STRUCT, :name => 'execution', :class => ::CadenceThrift::WorkflowExecution, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class PendingActivityInfo
    include ::Thrift::Struct, ::Thrift::Struct_Union
    ACTIVITYID = 10
    ACTIVITYTYPE = 20
    STATE = 30
    HEARTBEATDETAILS = 40
    LASTHEARTBEATTIMESTAMP = 50
    LASTSTARTEDTIMESTAMP = 60
    ATTEMPT = 70
    MAXIMUMATTEMPTS = 80
    SCHEDULEDTIMESTAMP = 90
    EXPIRATIONTIMESTAMP = 100
    LASTFAILUREREASON = 110
    LASTWORKERIDENTITY = 120
    LASTFAILUREDETAILS = 130

    FIELDS = {
      ACTIVITYID => {:type => ::Thrift::Types::STRING, :name => 'activityID', :optional => true},
      ACTIVITYTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'activityType', :class => ::CadenceThrift::ActivityType, :optional => true},
      STATE => {:type => ::Thrift::Types::I32, :name => 'state', :optional => true, :enum_class => ::CadenceThrift::PendingActivityState},
      HEARTBEATDETAILS => {:type => ::Thrift::Types::STRING, :name => 'heartbeatDetails', :binary => true, :optional => true},
      LASTHEARTBEATTIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'lastHeartbeatTimestamp', :optional => true},
      LASTSTARTEDTIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'lastStartedTimestamp', :optional => true},
      ATTEMPT => {:type => ::Thrift::Types::I32, :name => 'attempt', :optional => true},
      MAXIMUMATTEMPTS => {:type => ::Thrift::Types::I32, :name => 'maximumAttempts', :optional => true},
      SCHEDULEDTIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'scheduledTimestamp', :optional => true},
      EXPIRATIONTIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'expirationTimestamp', :optional => true},
      LASTFAILUREREASON => {:type => ::Thrift::Types::STRING, :name => 'lastFailureReason', :optional => true},
      LASTWORKERIDENTITY => {:type => ::Thrift::Types::STRING, :name => 'lastWorkerIdentity', :optional => true},
      LASTFAILUREDETAILS => {:type => ::Thrift::Types::STRING, :name => 'lastFailureDetails', :binary => true, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @state.nil? || ::CadenceThrift::PendingActivityState::VALID_VALUES.include?(@state)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field state!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class PendingChildExecutionInfo
    include ::Thrift::Struct, ::Thrift::Struct_Union
    WORKFLOWID = 10
    RUNID = 20
    WORKFLOWTYPNAME = 30
    INITIATEDID = 40
    PARENTCLOSEPOLICY = 50

    FIELDS = {
      WORKFLOWID => {:type => ::Thrift::Types::STRING, :name => 'workflowID', :optional => true},
      RUNID => {:type => ::Thrift::Types::STRING, :name => 'runID', :optional => true},
      WORKFLOWTYPNAME => {:type => ::Thrift::Types::STRING, :name => 'workflowTypName', :optional => true},
      INITIATEDID => {:type => ::Thrift::Types::I64, :name => 'initiatedID', :optional => true},
      PARENTCLOSEPOLICY => {:type => ::Thrift::Types::I32, :name => 'parentClosePolicy', :optional => true, :enum_class => ::CadenceThrift::ParentClosePolicy}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @parentClosePolicy.nil? || ::CadenceThrift::ParentClosePolicy::VALID_VALUES.include?(@parentClosePolicy)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field parentClosePolicy!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DescribeWorkflowExecutionResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    EXECUTIONCONFIGURATION = 10
    WORKFLOWEXECUTIONINFO = 20
    PENDINGACTIVITIES = 30
    PENDINGCHILDREN = 40

    FIELDS = {
      EXECUTIONCONFIGURATION => {:type => ::Thrift::Types::STRUCT, :name => 'executionConfiguration', :class => ::CadenceThrift::WorkflowExecutionConfiguration, :optional => true},
      WORKFLOWEXECUTIONINFO => {:type => ::Thrift::Types::STRUCT, :name => 'workflowExecutionInfo', :class => ::CadenceThrift::WorkflowExecutionInfo, :optional => true},
      PENDINGACTIVITIES => {:type => ::Thrift::Types::LIST, :name => 'pendingActivities', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::PendingActivityInfo}, :optional => true},
      PENDINGCHILDREN => {:type => ::Thrift::Types::LIST, :name => 'pendingChildren', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::PendingChildExecutionInfo}, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DescribeTaskListRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN = 10
    TASKLIST = 20
    TASKLISTTYPE = 30
    INCLUDETASKLISTSTATUS = 40

    FIELDS = {
      DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
      TASKLIST => {:type => ::Thrift::Types::STRUCT, :name => 'taskList', :class => ::CadenceThrift::TaskList, :optional => true},
      TASKLISTTYPE => {:type => ::Thrift::Types::I32, :name => 'taskListType', :optional => true, :enum_class => ::CadenceThrift::TaskListType},
      INCLUDETASKLISTSTATUS => {:type => ::Thrift::Types::BOOL, :name => 'includeTaskListStatus', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DescribeTaskListResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    POLLERS = 10
    TASKLISTSTATUS = 20

    FIELDS = {
      POLLERS => {:type => ::Thrift::Types::LIST, :name => 'pollers', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::PollerInfo}, :optional => true},
      TASKLISTSTATUS => {:type => ::Thrift::Types::STRUCT, :name => 'taskListStatus', :class => ::CadenceThrift::TaskListStatus, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class TaskListStatus
    include ::Thrift::Struct, ::Thrift::Struct_Union
    BACKLOGCOUNTHINT = 10
    READLEVEL = 20
    ACKLEVEL = 30
    RATEPERSECOND = 35
    TASKIDBLOCK = 40

    FIELDS = {
      BACKLOGCOUNTHINT => {:type => ::Thrift::Types::I64, :name => 'backlogCountHint', :optional => true},
      READLEVEL => {:type => ::Thrift::Types::I64, :name => 'readLevel', :optional => true},
      ACKLEVEL => {:type => ::Thrift::Types::I64, :name => 'ackLevel', :optional => true},
      RATEPERSECOND => {:type => ::Thrift::Types::DOUBLE, :name => 'ratePerSecond', :optional => true},
      TASKIDBLOCK => {:type => ::Thrift::Types::STRUCT, :name => 'taskIDBlock', :class => ::CadenceThrift::TaskIDBlock, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class TaskIDBlock
    include ::Thrift::Struct, ::Thrift::Struct_Union
    STARTID = 10
    ENDID = 20

    FIELDS = {
      STARTID => {:type => ::Thrift::Types::I64, :name => 'startID', :optional => true},
      ENDID => {:type => ::Thrift::Types::I64, :name => 'endID', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DescribeHistoryHostRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    HOSTADDRESS = 10
    SHARDIDFORHOST = 20
    EXECUTIONFORHOST = 30

    FIELDS = {
      HOSTADDRESS => {:type => ::Thrift::Types::STRING, :name => 'hostAddress', :optional => true},
      SHARDIDFORHOST => {:type => ::Thrift::Types::I32, :name => 'shardIdForHost', :optional => true},
      EXECUTIONFORHOST => {:type => ::Thrift::Types::STRUCT, :name => 'executionForHost', :class => ::CadenceThrift::WorkflowExecution, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RemoveTaskRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SHARDID = 10
    TYPE = 20
    TASKID = 30

    FIELDS = {
      SHARDID => {:type => ::Thrift::Types::I32, :name => 'shardID', :optional => true},
      TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :optional => true},
      TASKID => {:type => ::Thrift::Types::I64, :name => 'taskID', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class CloseShardRequest
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SHARDID = 10

    FIELDS = {
      SHARDID => {:type => ::Thrift::Types::I32, :name => 'shardID', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DescribeHistoryHostResponse
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NUMBEROFSHARDS = 10
    SHARDIDS = 20
    DOMAINCACHE = 30
    SHARDCONTROLLERSTATUS = 40
    ADDRESS = 50

    FIELDS = {
      NUMBEROFSHARDS => {:type => ::Thrift::Types::I32, :name => 'numberOfShards', :optional => true},
      SHARDIDS => {:type => ::Thrift::Types::LIST, :name => 'shardIDs', :element => {:type => ::Thrift::Types::I32}, :optional => true},
      DOMAINCACHE => {:type => ::Thrift::Types::STRUCT, :name => 'domainCache', :class => ::CadenceThrift::DomainCacheInfo, :optional => true},
      SHARDCONTROLLERSTATUS => {:type => ::Thrift::Types::STRING, :name => 'shardControllerStatus', :optional => true},
      ADDRESS => {:type => ::Thrift::Types::STRING, :name => 'address', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class DomainCacheInfo
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NUMOFITEMSINCACHEBYID = 10
    NUMOFITEMSINCACHEBYNAME = 20

    FIELDS = {
      NUMOFITEMSINCACHEBYID => {:type => ::Thrift::Types::I64, :name => 'numOfItemsInCacheByID', :optional => true},
      NUMOFITEMSINCACHEBYNAME => {:type => ::Thrift::Types::I64, :name => 'numOfItemsInCacheByName', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class PollerInfo
    include ::Thrift::Struct, ::Thrift::Struct_Union
    LASTACCESSTIME = 10
    IDENTITY = 20
    RATEPERSECOND = 30

    FIELDS = {
      LASTACCESSTIME => {:type => ::Thrift::Types::I64, :name => 'lastAccessTime', :optional => true},
      IDENTITY => {:type => ::Thrift::Types::STRING, :name => 'identity', :optional => true},
      RATEPERSECOND => {:type => ::Thrift::Types::DOUBLE, :name => 'ratePerSecond', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class RetryPolicy
    include ::Thrift::Struct, ::Thrift::Struct_Union
    INITIALINTERVALINSECONDS = 10
    BACKOFFCOEFFICIENT = 20
    MAXIMUMINTERVALINSECONDS = 30
    MAXIMUMATTEMPTS = 40
    NONRETRIABLEERRORREASONS = 50
    EXPIRATIONINTERVALINSECONDS = 60

    FIELDS = {
      INITIALINTERVALINSECONDS => {:type => ::Thrift::Types::I32, :name => 'initialIntervalInSeconds', :optional => true},
      BACKOFFCOEFFICIENT => {:type => ::Thrift::Types::DOUBLE, :name => 'backoffCoefficient', :optional => true},
      MAXIMUMINTERVALINSECONDS => {:type => ::Thrift::Types::I32, :name => 'maximumIntervalInSeconds', :optional => true},
      MAXIMUMATTEMPTS => {:type => ::Thrift::Types::I32, :name => 'maximumAttempts', :optional => true},
      NONRETRIABLEERRORREASONS => {:type => ::Thrift::Types::LIST, :name => 'nonRetriableErrorReasons', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
      EXPIRATIONINTERVALINSECONDS => {:type => ::Thrift::Types::I32, :name => 'expirationIntervalInSeconds', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class HistoryBranchRange
    include ::Thrift::Struct, ::Thrift::Struct_Union
    BRANCHID = 10
    BEGINNODEID = 20
    ENDNODEID = 30

    FIELDS = {
      BRANCHID => {:type => ::Thrift::Types::STRING, :name => 'branchID', :optional => true},
      BEGINNODEID => {:type => ::Thrift::Types::I64, :name => 'beginNodeID', :optional => true},
      ENDNODEID => {:type => ::Thrift::Types::I64, :name => 'endNodeID', :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class HistoryBranch
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TREEID = 10
    BRANCHID = 20
    ANCESTORS = 30

    FIELDS = {
      TREEID => {:type => ::Thrift::Types::STRING, :name => 'treeID', :optional => true},
      BRANCHID => {:type => ::Thrift::Types::STRING, :name => 'branchID', :optional => true},
      ANCESTORS => {:type => ::Thrift::Types::LIST, :name => 'ancestors', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CadenceThrift::HistoryBranchRange}, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end
